#NEXUS
[R-package APE, Thu Jun 07 22:34:02 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 48;
	TAXLABELS
		Namacalathus
		Haplophrentis_carinatus
		Pedunculotheca_diania
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Amathia
		Pelagodiscus_atlanticus
		Terebratulina
		Lingula
		Phoronis
		Sipunculus
		Serpula
		Tonicella
		Dentalium
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Novocrania
		Craniops
		Gasconsia
		Ussunia
		Eccentrotheca
		Eoobolus
		Glyptoria
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Micromitra
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Salanygolina
		Siphonobolus_priscus
		Tomteluva_perturbata
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Namacalathus,
		2	Haplophrentis_carinatus,
		3	Pedunculotheca_diania,
		4	Cotyledion_tylodes,
		5	Loxosomella,
		6	Flustra,
		7	Amathia,
		8	Pelagodiscus_atlanticus,
		9	Terebratulina,
		10	Lingula,
		11	Phoronis,
		12	Sipunculus,
		13	Serpula,
		14	Tonicella,
		15	Dentalium,
		16	Wiwaxia_corrugata,
		17	Halkieria_evangelista,
		18	Dailyatia,
		19	Acanthotretella_spinosa,
		20	Alisina,
		21	Askepasma_toddense,
		22	Antigonambonites_planus,
		23	Botsfordia,
		24	Clupeafumosus_socialis,
		25	Coolinia_pecten,
		26	Novocrania,
		27	Craniops,
		28	Gasconsia,
		29	Ussunia,
		30	Eccentrotheca,
		31	Eoobolus,
		32	Glyptoria,
		33	Heliomedusa_orienta,
		34	Kutorgina_chengjiangensis,
		35	Lingulosacculus,
		36	Lingulellotreta_malongensis,
		37	Longtancunella_chengjiangensis,
		38	Micrina,
		39	Micromitra,
		40	Mickwitzia_muralensis,
		41	Mummpikia_nuda,
		42	Nisusia_sulcata,
		43	Orthis,
		44	Paterimitra,
		45	Salanygolina,
		46	Siphonobolus_priscus,
		47	Tomteluva_perturbata,
		48	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (6,(7,((((4,30),(11,1)),((33,((44,(38,(((((24,(35,(19,46))),(36,10)),(31,(23,41))),(40,8)),(((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22))))),(28,(29,(26,27))))))),(2,3))),(18,17))),(5,((15,(14,16)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(30,(1,11))),((33,((44,(38,(((28,(29,(26,27))),((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22)))))),((((24,(35,(19,46))),(36,10)),(31,(23,41))),(40,8))))),(2,3))),(18,17))),(5,((15,(14,16)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(30,(1,11))),((17,18),(33,((44,(38,((((45,(48,((34,(42,(47,(32,(37,(20,(43,9))))))),(22,25)))),(39,21)),(28,(29,(27,26)))),((((24,(35,(46,19))),(10,36)),(31,(41,23))),(8,40))))),(3,2))))),(5,((12,13),(15,(16,14)))))));
	TREE * UNTITLED = [&R] (6,(7,((((30,4),(1,11)),((33,((44,(38,(((8,40),((((24,35),(19,46)),(10,36)),(31,(23,41)))),((28,(29,(26,27))),((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22))))))))),(2,3))),(18,17))),(5,((15,(14,16)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,((((30,4),(11,1)),((33,((44,(38,(((((36,10),(35,(24,(46,19)))),(31,(41,23))),(8,40)),((28,(29,(27,26))),((39,21),(45,(48,((34,(42,(47,(32,(37,(20,(43,9))))))),(22,25))))))))),(3,2))),(17,18))),(5,((15,(16,14)),(13,12))))));
	TREE * UNTITLED = [&R] (6,(7,(((30,((33,((44,(38,((((21,39),(45,(48,((25,22),(34,(42,(47,(32,(37,(20,(9,43))))))))))),(28,(29,(26,27)))),((((35,(24,(19,46))),(36,10)),(31,(23,41))),(40,8))))),(2,3))),(18,17))),(4,(11,1))),(5,((13,12),(15,(16,14)))))));
	TREE * UNTITLED = [&R] (6,(7,(((30,((18,17),(33,((44,(38,(((28,(29,(26,27))),((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22)))))),(((((24,35),(19,46)),(36,10)),(31,(23,41))),(40,8))))),(2,3))))),(4,(1,11))),(5,((12,13),(15,(16,14)))))));
	TREE * UNTITLED = [&R] (6,(7,((((30,4),(1,11)),((33,((44,(38,((((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(22,25))))),(28,(29,(26,27)))),((((10,36),(24,(35,(19,46)))),(31,(23,41))),(40,8))))),(2,3))),(18,17))),(5,((12,13),(15,(14,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((30,(((17,18),(33,((44,(38,(((28,(29,(26,27))),((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22)))))),((((24,(35,(19,46))),(36,10)),(31,(23,41))),(40,8))))),(2,3)))),(4,(1,11)))),(5,((15,(14,16)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,((((33,((44,(38,((((39,21),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(22,25))))),(28,(29,(27,26)))),((((24,(35,(46,19))),(10,36)),(31,(41,23))),(8,40))))),(3,2))),(17,18)),(4,(30,(1,11)))),(5,((15,(14,16)),(13,12))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(30,(11,1))),((33,((44,(38,(((28,(29,(27,26))),((39,21),(45,(48,((34,(42,(47,(32,(37,(20,(43,9))))))),(22,25)))))),((((24,(35,(46,19))),(10,36)),(31,(41,23))),(8,40))))),(3,2))),(17,18))),(5,((15,(14,16)),(13,12))))));
	TREE * UNTITLED = [&R] (6,(7,((30,((4,(1,11)),((18,17),(33,((44,(38,((((45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22)))),(39,21)),(28,(29,(26,27)))),(((((24,35),(19,46)),(36,10)),(31,(23,41))),(40,8))))),(2,3)))))),(5,((15,(14,16)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,((5,((12,13),(15,(14,16)))),((30,((33,((44,(38,(((((35,(24,(46,19))),(10,36)),(31,(41,23))),(8,40)),(((45,(48,((34,(42,(47,(32,(37,(20,(43,9))))))),(22,25)))),(39,21)),(28,(29,(27,26))))))),(3,2))),(17,18))),(4,(11,1))))));
	TREE * UNTITLED = [&R] (6,(7,((30,((4,(1,11)),((17,18),(33,((44,(38,(((((35,(24,(46,19))),(36,10)),(31,(23,41))),(40,8)),((28,(29,(26,27))),((39,21),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22))))))))),(2,3)))))),(5,((15,(14,16)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,((30,(((18,17),(33,((44,(38,(((28,(29,(26,27))),((21,39),(45,(48,((25,22),(34,(42,(47,(32,(37,(20,(9,43)))))))))))),((((36,10),((24,35),(19,46))),(31,(23,41))),(40,8))))),(2,3)))),(4,(1,11)))),(5,((12,13),(15,(14,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((30,(((33,((44,(38,((((45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22)))),(21,39)),(28,(29,(26,27)))),(((((46,19),(35,24)),(36,10)),(31,(23,41))),(40,8))))),(2,3))),(18,17)),(4,(1,11)))),(5,((12,13),(15,(14,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((((30,4),(1,11)),((33,((44,(38,((((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22))))),(28,(29,(26,27)))),(((((24,35),(19,46)),(36,10)),(31,(23,41))),(40,8))))),(2,3))),(18,17))),(5,((12,13),(15,(14,16)))))));
	TREE * UNTITLED = [&R] (6,(7,(((30,((33,((44,(38,((((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22))))),(28,(29,(26,27)))),(((31,(23,41)),((35,(24,(19,46))),(36,10))),(40,8))))),(2,3))),(18,17))),(4,(1,11))),(5,((15,(14,16)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(30,(11,1))),((18,17),(33,((44,(38,((((39,21),(45,(48,((34,(42,(47,(32,(37,(20,(43,9))))))),(22,25))))),(28,(29,(27,26)))),((((35,(24,(46,19))),(10,36)),(31,(41,23))),(8,40))))),(3,2))))),(5,((15,(14,16)),(13,12))))));
	TREE * UNTITLED = [&R] (6,(7,((((4,30),(1,11)),((33,((44,(38,(((28,(29,(26,27))),((21,39),(45,(48,((22,25),(34,(42,(47,(32,(37,(20,(43,9)))))))))))),((((35,(24,(46,19))),(36,10)),(31,(23,41))),(40,8))))),(2,3))),(18,17))),(5,((15,(14,16)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,((30,((4,(1,11)),((18,17),(33,((44,(38,((((31,(23,41)),((10,36),(24,(35,(19,46))))),(40,8)),(((39,21),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22))))),(28,(29,(26,27))))))),(2,3)))))),(5,((15,(14,16)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,(((30,((33,((44,(38,(((((24,(35,(19,46))),(10,36)),(31,(41,23))),(8,40)),(((39,21),(45,(48,((34,(42,(47,(32,(37,(20,(43,9))))))),(22,25))))),(28,(29,(27,26))))))),(3,2))),(17,18))),(4,(11,1))),(5,((15,(16,14)),(13,12))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(30,(1,11))),((33,((44,(38,(((28,(29,(26,27))),((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22)))))),((((24,(35,(19,46))),(36,10)),(31,(23,41))),(40,8))))),(2,3))),(18,17))),(5,((15,(16,14)),(12,13))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(30,(11,1))),((33,((44,(38,((((45,(48,((34,(42,(47,(32,(37,(20,(43,9))))))),(22,25)))),(39,21)),(28,(29,(27,26)))),(((((35,24),(46,19)),(10,36)),(31,(41,23))),(8,40))))),(3,2))),(17,18))),(5,((15,(16,14)),(13,12))))));
	TREE * UNTITLED = [&R] (6,(7,((5,((13,12),(15,(14,16)))),(30,((4,(1,11)),((18,17),(33,((44,(38,(((((35,(24,(19,46))),(36,10)),(31,(23,41))),(40,8)),((28,(29,(26,27))),((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(43,9))))))),(25,22))))))))),(2,3)))))))));
	TREE * UNTITLED = [&R] (6,(7,(((30,(4,(1,11))),((33,((44,(38,((((((35,24),(19,46)),(36,10)),(31,(23,41))),(40,8)),((28,(29,(26,27))),((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22))))))))),(2,3))),(18,17))),(5,((13,12),(15,(14,16)))))));
	TREE * UNTITLED = [&R] (6,(7,(((30,((33,((44,(38,(((8,40),((((24,35),(46,19)),(10,36)),(31,(41,23)))),((28,(29,(26,27))),((39,21),(45,(48,((34,(42,(47,(32,(37,(20,(43,9))))))),(22,25))))))))),(3,2))),(17,18))),(4,(11,1))),(5,((12,13),(15,(16,14)))))));
	TREE * UNTITLED = [&R] (6,(7,(((30,(4,(1,11))),((33,((44,(38,(((28,(29,(26,27))),((21,39),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(25,22)))))),((((36,10),((24,35),(19,46))),(31,(23,41))),(40,8))))),(2,3))),(18,17))),(5,((13,12),(15,(14,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((((4,30),(11,1)),((33,((44,(38,(((((10,36),((24,35),(19,46))),(31,(41,23))),(8,40)),((28,(29,(27,26))),((39,21),(45,(48,((22,25),(34,(42,(47,(32,(37,(20,(43,9))))))))))))))),(3,2))),(17,18))),(5,((13,12),(15,(16,14)))))));
	TREE * UNTITLED = [&R] (6,(7,((((30,4),(11,1)),((33,((44,(38,(((28,(29,(27,26))),((39,21),(45,(48,((34,(42,(47,(32,(37,(20,(9,43))))))),(22,25)))))),((((36,10),(24,(35,(46,19)))),(31,(41,23))),(8,40))))),(3,2))),(17,18))),(5,((15,(16,14)),(13,12))))));
END;
