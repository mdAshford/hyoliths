#NEXUS
[R-package APE, Wed May 30 02:38:18 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 46;
	TAXLABELS
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Novocrania
		Lingula
		Phoronis
		Sipunculus
		Serpula
		Chiton
		Dentalium
		Pelagodiscus_atlanticus
		Terebratulina
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Glyptoria
		Gasconsia
		Haplophrentis_carinatus
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Micromitra
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Pedunculotheca_diania
		Salanygolina
		Siphonobolus_priscus
		Ussunia
		Tomteluva_perturbata
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Cotyledion_tylodes,
		2	Loxosomella,
		3	Flustra,
		4	Novocrania,
		5	Lingula,
		6	Phoronis,
		7	Sipunculus,
		8	Serpula,
		9	Chiton,
		10	Dentalium,
		11	Pelagodiscus_atlanticus,
		12	Terebratulina,
		13	Wiwaxia_corrugata,
		14	Halkieria_evangelista,
		15	Dailyatia,
		16	Acanthotretella_spinosa,
		17	Alisina,
		18	Askepasma_toddense,
		19	Antigonambonites_planus,
		20	Botsfordia,
		21	Clupeafumosus_socialis,
		22	Coolinia_pecten,
		23	Craniops,
		24	Eccentrotheca,
		25	Eoobolus,
		26	Glyptoria,
		27	Gasconsia,
		28	Haplophrentis_carinatus,
		29	Heliomedusa_orienta,
		30	Kutorgina_chengjiangensis,
		31	Lingulosacculus,
		32	Lingulellotreta_malongensis,
		33	Longtancunella_chengjiangensis,
		34	Micrina,
		35	Micromitra,
		36	Mickwitzia_muralensis,
		37	Mummpikia_nuda,
		38	Nisusia_sulcata,
		39	Orthis,
		40	Paterimitra,
		41	Pedunculotheca_diania,
		42	Salanygolina,
		43	Siphonobolus_priscus,
		44	Ussunia,
		45	Tomteluva_perturbata,
		46	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,(43,16)),((32,(20,(25,37))),(11,5)))),(((18,35),(27,(44,(23,4)))),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39)))))))))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,(16,43)),((32,(20,(25,37))),(5,11)))),((((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))),(27,(44,(4,23)))),(35,18))),(36,34))),(28,41))),((7,8),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,((32,(20,(25,37))),(5,11))),(16,43))),(((27,(44,(4,23))),((42,(46,45)),((30,(38,(26,(33,(17,(39,12)))))),(19,22)))),(35,18))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((8,7),(10,(13,(24,(9,(15,14)))))),(29,((40,((34,36),((((18,35),(27,(44,(4,23)))),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45)))),(21,((31,(16,43)),((32,(20,(37,25))),(5,11))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((((27,(44,(23,4))),(35,18)),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39))))))))),(21,((31,((32,(20,(37,25))),(11,5))),(43,16)))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,((36,34),((21,((31,((32,(20,(25,37))),(11,5))),(43,16))),(((35,18),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39))))))))),(27,(44,(4,23))))))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((7,8),(10,(13,(24,(9,(14,15)))))),(29,((40,((36,34),((21,((31,(43,16)),((32,(20,(37,25))),(5,11)))),(((27,(44,(23,4))),(18,35)),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39)))))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,((36,34),((21,(31,((16,43),((32,(20,(37,25))),(5,11))))),(((((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))),(35,18)),(27,(44,(4,23))))))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,(43,16)),((32,(20,(25,37))),(11,5)))),((((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39)))))))),(18,35)),(27,(44,(23,4))))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((8,7),(10,(13,(24,(9,(15,14)))))),(29,((40,(((21,(31,((16,43),((32,(20,(37,25))),(5,11))))),((((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))),(27,(44,(4,23)))),(35,18))),(36,34))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,((32,(20,(25,37))),(5,11))),(16,43))),((18,35),((27,(44,(4,23))),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((((35,18),(27,(44,(23,4)))),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45)))),(21,((31,((32,(20,(37,25))),(5,11))),(16,43)))),(36,34))),(28,41))),((7,8),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((7,8),(10,(13,(24,(9,(14,15)))))),(29,((40,((34,36),((21,((31,(43,16)),((32,(20,(37,25))),(5,11)))),(((((22,19),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46))),(27,(44,(23,4)))),(18,35))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,(31,((16,43),((11,5),(32,(20,(37,25))))))),(((35,18),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))),(27,(44,(4,23))))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((((27,(44,(4,23))),(35,18)),((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(39,12))))))))),(21,((31,((32,(20,(37,25))),(5,11))),(16,43)))),(36,34))),(28,41))),((7,8),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,(16,43)),((32,(20,(37,25))),(5,11)))),(((35,18),(27,(44,(4,23)))),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((8,7),(10,(13,(24,(9,(15,14)))))),(29,((40,((34,36),((21,(31,((16,43),((32,(20,(37,25))),(5,11))))),(((27,(44,(4,23))),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(45,46)))),(35,18))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,((36,34),((21,(31,(((32,(20,(25,37))),(11,5)),(43,16)))),(((27,(44,(23,4))),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39))))))))),(35,18))))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((8,7),(10,(13,(24,(9,(14,15)))))),(29,((40,(((21,((31,(43,16)),((32,(20,(37,25))),(11,5)))),((((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39)))))))),(27,(44,(23,4)))),(35,18))),(36,34))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,((36,34),((((35,18),((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12))))))))),(27,(44,(4,23)))),(21,((31,(16,43)),((32,(20,(37,25))),(5,11))))))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,((32,(20,(25,37))),(5,11))),(16,43))),((((42,(46,45)),((30,(38,(26,(33,(17,(39,12)))))),(19,22))),(27,(44,(4,23)))),(35,18))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,(31,((16,43),((32,(20,(25,37))),(5,11))))),(((27,(44,(4,23))),(35,18)),((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,((32,(20,(37,25))),(11,5))),(43,16))),(((((22,19),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46))),(18,35)),(27,(44,(4,23))))),(34,36))),(41,28))),((10,(13,(24,(9,(15,14))))),(7,8)))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,(31,(((32,(20,(37,25))),(5,11)),(16,43)))),(((35,18),(27,(44,(4,23)))),((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))))),(34,36))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((8,7),(10,(13,(24,(9,(15,14)))))),(29,((40,((((35,18),((27,(44,(4,23))),((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))))),(21,((31,(16,43)),((32,(20,(25,37))),(5,11))))),(36,34))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,((36,34),((21,((31,((32,(20,(37,25))),(5,11))),(16,43))),(((27,(44,(4,23))),(18,35)),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))))))),(28,41))),((7,8),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((8,7),(10,(13,(24,(9,(15,14)))))),(29,((40,(((21,((31,(16,43)),((32,(20,(37,25))),(5,11)))),(((35,18),(27,(44,(4,23)))),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45))))),(36,34))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,((36,34),((((18,35),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39))))))))),(27,(44,(23,4)))),(21,((31,(43,16)),((32,(20,(25,37))),(11,5))))))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((((((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(45,46))),(18,35)),(27,(44,(4,23)))),(21,((31,((32,(20,(37,25))),(5,11))),(16,43)))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,(31,(((32,(20,(25,37))),(11,5)),(43,16)))),((((42,(46,45)),((30,(38,(26,(33,(17,(12,39)))))),(22,19))),(27,(44,(23,4)))),(18,35))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,(31,(((11,5),(32,(20,(25,37)))),(43,16)))),((((42,(46,45)),((22,19),(30,(38,(26,(33,(17,(12,39)))))))),(27,(44,(23,4)))),(18,35))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,(16,43)),((32,(20,(25,37))),(11,5)))),(((35,18),(27,(44,(23,4)))),(((30,(38,(26,(33,(17,(12,39)))))),(22,19)),(42,(45,46))))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((8,7),(10,(13,(24,(9,(15,14)))))),(29,((28,41),(40,(((21,(31,((16,43),((32,(20,(25,37))),(5,11))))),((((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))),(27,(44,(4,23)))),(35,18))),(34,36))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,(16,43)),((32,(20,(25,37))),(11,5)))),(((27,(44,(4,23))),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))),(35,18))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((((35,18),((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12))))))))),(27,(44,(4,23)))),(21,((31,((32,(20,(37,25))),(5,11))),(43,16)))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,((32,(20,(37,25))),(11,5))),(43,16))),(((((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45))),(35,18)),(27,(44,(23,4))))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((8,7),(10,(13,(24,(9,(15,14)))))),(29,((40,(((21,((31,(43,16)),((32,(20,(37,25))),(5,11)))),(((35,18),(27,(44,(4,23)))),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45))))),(36,34))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((((35,18),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(45,46)))),(27,(44,(4,23)))),(21,((31,(16,43)),((32,(20,(37,25))),(5,11))))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,(43,16)),((11,5),(32,(20,(25,37)))))),(((18,35),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39))))))))),(27,(44,(23,4))))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,((32,(20,(37,25))),(11,5))),(43,16))),(((27,(44,(23,4))),(35,18)),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39)))))))))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,(((7,8),(10,(13,(24,(9,(14,15)))))),(29,((40,((36,34),((((18,35),(((30,(38,(26,(33,(17,(12,39)))))),(22,19)),(42,(45,46)))),(27,(44,(23,4)))),(21,(31,(((32,(20,(37,25))),(11,5)),(43,16))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,((31,((32,(20,(25,37))),(11,5))),(43,16))),((((42,(45,46)),((30,(38,(26,(33,(17,(12,39)))))),(22,19))),(27,(44,(23,4)))),(18,35))),(34,36))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,(31,(((32,(20,(37,25))),(5,11)),(16,43)))),(((27,(44,(4,23))),(18,35)),(((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(46,45))))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(14,15)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,(31,((16,43),((32,(20,(25,37))),(5,11))))),(((27,(44,(4,23))),((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(39,12))))))))),(35,18))),(36,34))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,(31,((16,43),((11,5),(32,(20,(25,37))))))),(((27,(44,(4,23))),((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12))))))))),(35,18))),(34,36))),(28,41))),((8,7),(10,(13,(24,(9,(15,14)))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(1,((29,((40,(((21,(31,((43,16),((5,11),(32,(20,(25,37))))))),((((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39)))))))),(18,35)),(27,(44,(23,4))))),(36,34))),(41,28))),((7,8),(10,(13,(24,(9,(14,15)))))))))));
END;
