#NEXUS
[R-package APE, Fri Jun 01 02:33:34 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 46;
	TAXLABELS
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Novocrania
		Lingula
		Phoronis
		Sipunculus
		Serpula
		Tonicella
		Dentalium
		Pelagodiscus_atlanticus
		Terebratulina
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Glyptoria
		Gasconsia
		Haplophrentis_carinatus
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Micromitra
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Pedunculotheca_diania
		Salanygolina
		Siphonobolus_priscus
		Ussunia
		Tomteluva_perturbata
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Cotyledion_tylodes,
		2	Loxosomella,
		3	Flustra,
		4	Novocrania,
		5	Lingula,
		6	Phoronis,
		7	Sipunculus,
		8	Serpula,
		9	Tonicella,
		10	Dentalium,
		11	Pelagodiscus_atlanticus,
		12	Terebratulina,
		13	Wiwaxia_corrugata,
		14	Halkieria_evangelista,
		15	Dailyatia,
		16	Acanthotretella_spinosa,
		17	Alisina,
		18	Askepasma_toddense,
		19	Antigonambonites_planus,
		20	Botsfordia,
		21	Clupeafumosus_socialis,
		22	Coolinia_pecten,
		23	Craniops,
		24	Eccentrotheca,
		25	Eoobolus,
		26	Glyptoria,
		27	Gasconsia,
		28	Haplophrentis_carinatus,
		29	Heliomedusa_orienta,
		30	Kutorgina_chengjiangensis,
		31	Lingulosacculus,
		32	Lingulellotreta_malongensis,
		33	Longtancunella_chengjiangensis,
		34	Micrina,
		35	Micromitra,
		36	Mickwitzia_muralensis,
		37	Mummpikia_nuda,
		38	Nisusia_sulcata,
		39	Orthis,
		40	Paterimitra,
		41	Pedunculotheca_diania,
		42	Salanygolina,
		43	Siphonobolus_priscus,
		44	Ussunia,
		45	Tomteluva_perturbata,
		46	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((9,(10,13)),(7,8))),(29,((40,(34,(((27,(44,(23,4))),((35,18),(((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))))),((36,11),(5,((31,(21,(43,16))),(32,(20,(37,25))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,((((18,35),((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(12,39))))))))),(27,(44,(4,23)))),((11,36),(5,((31,(21,(16,43))),(32,(20,(25,37))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,(((27,(44,(4,23))),((18,35),((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(12,39)))))))))),((11,36),(5,((31,(21,(16,43))),(32,(20,(25,37))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,((((35,18),(((22,19),(30,(38,(26,(33,(17,(12,39))))))),(42,(46,45)))),(27,(44,(23,4)))),((36,11),(5,(((31,21),(43,16)),(32,(20,(37,25))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((9,(10,13)),(7,8))),(29,((40,(34,(((36,11),(5,((21,(31,(43,16))),(32,(20,(37,25)))))),(((18,35),((42,(46,45)),((22,19),(30,(38,(26,(33,(17,(39,12))))))))),(27,(44,(23,4))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((9,(13,10)),(8,7))),(29,((40,(34,((((((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46))),(18,35)),(27,(44,(4,23)))),((11,36),(5,((21,(31,(16,43))),(32,(20,(25,37))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((9,(10,13)),(7,8))),(29,((40,(34,((((35,18),((42,(46,45)),((22,19),(30,(38,(26,(33,(17,(39,12))))))))),(27,(44,(23,4)))),((36,11),(5,((21,(31,(43,16))),(32,(20,(37,25))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,((((18,35),(((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46)))),(27,(44,(4,23)))),((11,36),(5,((31,(21,(16,43))),(32,(20,(25,37))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,(((((42,(45,46)),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(18,35)),(27,(44,(4,23)))),((11,36),(5,((21,(31,(16,43))),(32,(20,(37,25))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,((((18,35),(((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46)))),(27,(44,(4,23)))),((11,36),(5,((31,(21,(16,43))),(32,(20,(37,25))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,(((((42,(46,45)),((22,19),(30,(38,(26,(33,(17,(39,12)))))))),(18,35)),(27,(44,(23,4)))),((11,36),(5,((32,(20,(37,25))),(21,(31,(43,16))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,(((11,36),(5,(((21,31),(43,16)),(32,(20,(25,37)))))),(((18,35),(((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46)))),(27,(44,(4,23))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,((((35,18),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(39,12))))))))),(27,(44,(23,4)))),((36,11),(5,((32,(20,(37,25))),(21,(31,(16,43))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,((((35,18),(((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))),(27,(44,(23,4)))),((36,11),(5,((32,(20,(37,25))),(21,(31,(43,16))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,((((35,18),(((30,(38,(26,(33,(17,(12,39)))))),(22,19)),(42,(46,45)))),(27,(44,(23,4)))),((36,11),(5,((31,(21,(43,16))),(32,(20,(37,25))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,(((36,11),(5,((32,(20,(37,25))),((31,21),(43,16))))),(((((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))),(35,18)),(27,(44,(23,4))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,((((18,35),(((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46)))),(27,(44,(4,23)))),((11,36),(5,((32,(20,(25,37))),(21,(31,(16,43))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,((((35,18),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(39,12))))))))),(27,(44,(23,4)))),((36,11),(5,(((21,31),(43,16)),(32,(20,(37,25))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,((((35,18),(((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))),(27,(44,(23,4)))),((36,11),(5,(((31,21),(43,16)),(32,(20,(37,25))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,((((35,18),(((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45)))),(27,(44,(23,4)))),((36,11),(5,((21,(31,(16,43))),(32,(20,(37,25))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((9,(13,10)),(8,7))),(29,((40,(34,(((((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(12,39)))))))),(35,18)),(27,(44,(4,23)))),((11,36),(5,((31,(21,(16,43))),(32,(20,(37,25))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((9,(13,10)),(8,7))),(29,((40,(34,(((((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(12,39)))))))),(18,35)),(27,(44,(4,23)))),((11,36),(5,((31,(21,(16,43))),(32,(20,(37,25))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,((((18,35),((42,(45,46)),((30,(38,(26,(33,(17,(12,39)))))),(19,22)))),(27,(44,(4,23)))),((11,36),(5,((32,(20,(37,25))),((21,31),(43,16)))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,(((((42,(46,45)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(35,18)),(27,(44,(23,4)))),((36,11),(5,((21,(31,(16,43))),(32,(20,(25,37))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((9,(13,10)),(8,7))),(29,((40,(34,(((27,(44,(4,23))),(((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(12,39)))))))),(18,35))),((11,36),(5,((31,(21,(43,16))),(32,(20,(25,37))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,(((5,((31,(21,(16,43))),(32,(20,(25,37))))),(36,11)),((((42,(46,45)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(18,35)),(27,(44,(23,4))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,(((11,36),(5,((31,(21,(16,43))),(32,(20,(25,37)))))),(((18,35),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(45,46)))),(27,(44,(4,23))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((9,(13,10)),(8,7))),(29,((40,(34,((((18,35),((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(12,39))))))))),(27,(44,(4,23)))),((11,36),(5,(((31,21),(16,43)),(32,(20,(37,25))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,((((35,18),((42,(46,45)),((22,19),(30,(38,(26,(33,(17,(39,12))))))))),(27,(44,(4,23)))),((36,11),(5,(((31,21),(43,16)),(32,(20,(37,25))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,(((11,36),(5,((21,(31,(16,43))),(32,(20,(25,37)))))),(((((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46))),(35,18)),(27,(44,(4,23))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((28,41),(40,(34,(((11,36),(5,((21,(31,(16,43))),(32,(20,(25,37)))))),((((42,(45,46)),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(18,35)),(27,(44,(4,23))))))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((9,(10,13)),(7,8))),(29,((40,(34,(((27,(44,(23,4))),((35,18),(((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))))),((36,11),(5,((32,(20,(37,25))),(31,(21,(43,16))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((8,7),(9,(13,10)))),(29,((40,(34,((((18,35),((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(12,39))))))))),(27,(44,(4,23)))),((36,11),(5,((31,(21,(16,43))),(32,(20,(25,37))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(24,15)),((14,((7,8),(9,(10,13)))),(29,((40,(34,((((((30,(38,(26,(33,(17,(12,39)))))),(22,19)),(42,(45,46))),(35,18)),(27,(44,(23,4)))),((36,11),(5,((32,(20,(37,25))),(21,(31,(43,16))))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,(((27,(44,(4,23))),((18,35),((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(12,39)))))))))),((11,36),(5,(((31,21),(16,43)),(32,(20,(25,37))))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,(15,24)),((14,((8,7),(9,(13,10)))),(29,((40,(34,(((((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(12,39)))))))),(18,35)),(27,(44,(4,23)))),((11,36),(5,(((31,21),(16,43)),(32,(20,(37,25))))))))),(28,41))))))));
END;
