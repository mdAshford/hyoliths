#NEXUS
[R-package APE, Tue Jun 05 22:21:43 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 47;
	TAXLABELS
		Namacalathus
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Novocrania
		Lingula
		Phoronis
		Sipunculus
		Serpula
		Tonicella
		Dentalium
		Pelagodiscus_atlanticus
		Terebratulina
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Glyptoria
		Gasconsia
		Haplophrentis_carinatus
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Micromitra
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Pedunculotheca_diania
		Salanygolina
		Siphonobolus_priscus
		Ussunia
		Tomteluva_perturbata
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Namacalathus,
		2	Cotyledion_tylodes,
		3	Loxosomella,
		4	Flustra,
		5	Novocrania,
		6	Lingula,
		7	Phoronis,
		8	Sipunculus,
		9	Serpula,
		10	Tonicella,
		11	Dentalium,
		12	Pelagodiscus_atlanticus,
		13	Terebratulina,
		14	Wiwaxia_corrugata,
		15	Halkieria_evangelista,
		16	Dailyatia,
		17	Acanthotretella_spinosa,
		18	Alisina,
		19	Askepasma_toddense,
		20	Antigonambonites_planus,
		21	Botsfordia,
		22	Clupeafumosus_socialis,
		23	Coolinia_pecten,
		24	Craniops,
		25	Eccentrotheca,
		26	Eoobolus,
		27	Glyptoria,
		28	Gasconsia,
		29	Haplophrentis_carinatus,
		30	Heliomedusa_orienta,
		31	Kutorgina_chengjiangensis,
		32	Lingulosacculus,
		33	Lingulellotreta_malongensis,
		34	Longtancunella_chengjiangensis,
		35	Micrina,
		36	Micromitra,
		37	Mickwitzia_muralensis,
		38	Mummpikia_nuda,
		39	Nisusia_sulcata,
		40	Orthis,
		41	Paterimitra,
		42	Pedunculotheca_diania,
		43	Salanygolina,
		44	Siphonobolus_priscus,
		45	Ussunia,
		46	Tomteluva_perturbata,
		47	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (4,(1,(((2,(3,25)),(15,16)),((7,(30,((41,(35,(((37,12),(((6,33),(32,(22,(17,44)))),(26,(21,38)))),(((43,(47,((31,(39,(46,(27,(34,(18,(13,40))))))),(23,20)))),(19,36)),(28,(45,(5,24))))))),(42,29)))),((9,8),(11,(14,10)))))));
	TREE * UNTITLED = [&R] (4,(1,(((7,(30,((41,(35,(((28,(45,(5,24))),((43,(47,((31,(39,(46,(27,(34,(18,(13,40))))))),(23,20)))),(19,36))),((37,12),((((32,22),(17,44)),(6,33)),(26,(21,38))))))),(42,29)))),((9,8),(11,(14,10)))),(2,((3,25),(15,16))))));
	TREE * UNTITLED = [&R] (4,(1,(((7,(30,((41,(35,(((12,37),(((33,6),(22,(32,(44,17)))),(26,(38,21)))),(((43,(47,((31,(39,(46,(27,(34,(18,(40,13))))))),(20,23)))),(36,19)),(28,(45,(24,5))))))),(29,42)))),((9,8),(11,(10,14)))),(2,((3,25),(16,15))))));
	TREE * UNTITLED = [&R] (4,((25,(((8,9),(11,(10,14))),(7,(30,((41,(35,(((12,37),(((33,6),(32,(22,(17,44)))),(26,(38,21)))),(((19,36),(43,(47,((20,23),(31,(39,(46,(27,(34,(18,(40,13))))))))))),(28,(45,(24,5))))))),(29,42)))))),((2,(16,15)),(3,1))));
	TREE * UNTITLED = [&R] (4,((((7,(30,((42,29),(41,(35,(((((6,33),(22,(32,(17,44)))),(26,(21,38))),(37,12)),(((43,(47,((23,20),(31,(39,(46,(27,(34,(18,(13,40)))))))))),(19,36)),(28,(45,(5,24)))))))))),((9,8),(11,(10,14)))),((2,25),(1,3))),(15,16)));
	TREE * UNTITLED = [&R] (4,(1,(((((9,8),(11,(14,10))),(7,(30,((41,(35,(((28,(45,(5,24))),((36,19),(43,(47,((31,(39,(46,(27,(34,(18,(13,40))))))),(23,20)))))),((((6,33),((32,22),(17,44))),(26,(21,38))),(37,12))))),(42,29))))),(15,16)),(3,(2,25)))));
	TREE * UNTITLED = [&R] (4,((25,(((9,8),(11,(10,14))),((1,7),(30,((41,(35,(((28,(45,(24,5))),((43,(47,((31,(39,(46,(27,(34,(18,(40,13))))))),(20,23)))),(36,19))),((12,37),(((33,6),(32,(22,(44,17)))),(26,(38,21))))))),(29,42)))))),(3,(2,(16,15)))));
	TREE * UNTITLED = [&R] (4,(1,(((((8,9),(11,(10,14))),(7,(30,((41,(35,(((12,37),(((33,6),(22,(32,(44,17)))),(26,(38,21)))),(((43,(47,((31,(39,(46,(27,(34,(18,(40,13))))))),(20,23)))),(36,19)),(28,(45,(24,5))))))),(29,42))))),(3,(2,25))),(16,15))));
	TREE * UNTITLED = [&R] (4,((((7,(30,((41,(35,(((((32,(22,(17,44))),(6,33)),(26,(21,38))),(37,12)),(((19,36),(43,(47,((31,(39,(46,(27,(34,(18,(40,13))))))),(23,20))))),(28,(45,(5,24))))))),(42,29)))),((9,8),(11,(14,10)))),(15,16)),((1,3),(25,2))));
	TREE * UNTITLED = [&R] (4,(((25,(2,3)),(16,15)),(((1,7),(30,((41,(35,(((12,37),(((33,6),(32,(22,(44,17)))),(26,(38,21)))),(((43,(47,((31,(39,(46,(27,(34,(18,(40,13))))))),(20,23)))),(36,19)),(28,(45,(24,5))))))),(29,42)))),((8,9),(11,(10,14))))));
	TREE * UNTITLED = [&R] (4,(1,(((3,(2,25)),((7,(30,((41,(35,(((((33,6),(22,(32,(44,17)))),(26,(38,21))),(12,37)),(((36,19),(43,(47,((31,(39,(46,(27,(34,(18,(40,13))))))),(20,23))))),(28,(45,(24,5))))))),(29,42)))),((8,9),(11,(10,14))))),(16,15))));
	TREE * UNTITLED = [&R] (4,(1,((((7,(30,((41,(35,(((37,12),(((6,33),(22,(32,(44,17)))),(26,(21,38)))),(((43,(47,((31,(39,(46,(27,(34,(18,(13,40))))))),(23,20)))),(19,36)),(28,(45,(5,24))))))),(42,29)))),((9,8),(11,(14,10)))),(15,16)),(3,(25,2)))));
	TREE * UNTITLED = [&R] (4,(1,((25,((7,(30,((41,(35,(((12,37),(((33,6),(32,(22,(44,17)))),(26,(38,21)))),(((43,(47,((31,(39,(46,(27,(34,(18,(13,40))))))),(20,23)))),(36,19)),(28,(45,(24,5))))))),(29,42)))),((9,8),(11,(14,10))))),(3,(2,(16,15))))));
	TREE * UNTITLED = [&R] (4,(1,(((2,(15,16)),(3,25)),(((11,(10,14)),(9,8)),(7,(30,((41,(35,(((37,12),(((32,(22,(17,44))),(6,33)),(26,(38,21)))),(((43,(47,((31,(39,(46,(27,(34,(18,(13,40))))))),(23,20)))),(19,36)),(28,(45,(5,24))))))),(42,29))))))));
	TREE * UNTITLED = [&R] (4,(1,((((7,(30,((41,(35,(((37,12),((((32,22),(17,44)),(6,33)),(26,(21,38)))),(((36,19),(43,(47,((31,(39,(46,(27,(34,(18,(40,13))))))),(23,20))))),(28,(45,(5,24))))))),(42,29)))),((9,8),(11,(14,10)))),(3,(2,25))),(15,16))));
	TREE * UNTITLED = [&R] (4,(1,(((2,25),(3,(15,16))),(((9,8),(11,(14,10))),(7,(30,((41,(35,(((37,12),(((6,33),((22,32),(17,44))),(26,(21,38)))),(((43,(47,((31,(39,(46,(27,(34,(18,(13,40))))))),(23,20)))),(19,36)),(28,(45,(5,24))))))),(42,29))))))));
	TREE * UNTITLED = [&R] (4,(1,(((3,(25,2)),((7,(30,((41,(35,(((37,12),(((6,33),(22,(32,(17,44)))),(26,(21,38)))),(((43,(47,((31,(39,(46,(27,(34,(18,(40,13))))))),(23,20)))),(19,36)),(28,(45,(5,24))))))),(42,29)))),((9,8),(11,(10,14))))),(15,16))));
	TREE * UNTITLED = [&R] (4,(1,(((2,(15,16)),(25,3)),((7,(30,((41,(35,(((28,(45,(5,24))),((43,(47,((31,(39,(46,(27,(34,(18,(13,40))))))),(23,20)))),(19,36))),((((33,6),((22,32),(17,44))),(26,(21,38))),(37,12))))),(42,29)))),((9,8),(11,(14,10)))))));
END;
