#NEXUS
[R-package APE, Sat Jun 09 16:49:18 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 48;
	TAXLABELS
		Namacalathus
		Haplophrentis_carinatus
		Pedunculotheca_diania
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Amathia
		Novocrania
		Pelagodiscus_atlanticus
		Lingula
		Terebratulina
		Phoronis
		Sipunculus
		Serpula
		Tonicella
		Dentalium
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Micromitra
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Gasconsia
		Glyptoria
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Salanygolina
		Siphonobolus_priscus
		Tomteluva_perturbata
		Ussunia
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Namacalathus,
		2	Haplophrentis_carinatus,
		3	Pedunculotheca_diania,
		4	Cotyledion_tylodes,
		5	Loxosomella,
		6	Flustra,
		7	Amathia,
		8	Novocrania,
		9	Pelagodiscus_atlanticus,
		10	Lingula,
		11	Terebratulina,
		12	Phoronis,
		13	Sipunculus,
		14	Serpula,
		15	Tonicella,
		16	Dentalium,
		17	Wiwaxia_corrugata,
		18	Halkieria_evangelista,
		19	Dailyatia,
		20	Acanthotretella_spinosa,
		21	Alisina,
		22	Askepasma_toddense,
		23	Micromitra,
		24	Antigonambonites_planus,
		25	Botsfordia,
		26	Clupeafumosus_socialis,
		27	Coolinia_pecten,
		28	Craniops,
		29	Eccentrotheca,
		30	Eoobolus,
		31	Gasconsia,
		32	Glyptoria,
		33	Heliomedusa_orienta,
		34	Kutorgina_chengjiangensis,
		35	Lingulosacculus,
		36	Lingulellotreta_malongensis,
		37	Longtancunella_chengjiangensis,
		38	Micrina,
		39	Mickwitzia_muralensis,
		40	Mummpikia_nuda,
		41	Nisusia_sulcata,
		42	Orthis,
		43	Paterimitra,
		44	Salanygolina,
		45	Siphonobolus_priscus,
		46	Tomteluva_perturbata,
		47	Ussunia,
		48	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (6,(7,((((4,29),(12,1)),((43,(19,18)),(39,(33,(38,(((23,22),(((27,24),(34,(41,(32,(37,(21,(11,42))))))),(44,(46,48)))),((30,(25,((9,40),((26,(35,(20,45))),(36,10))))),((31,(47,(28,8))),(2,3))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,(((29,(4,(1,12))),((43,(18,19)),(39,(33,(38,(((30,(25,((40,9),((35,(26,(45,20))),(10,36))))),((31,(47,(8,28))),(3,2))),((23,22),(((24,27),(34,(41,(32,(37,(21,(42,11))))))),(44,(48,46)))))))))),(5,((15,(16,17)),(14,13))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(29,(12,1))),((43,(19,18)),(39,(33,(38,(((30,(25,((9,40),(((26,35),(20,45)),(36,10))))),((31,(47,(28,8))),(2,3))),((23,22),(((27,24),(34,(41,(32,(37,(21,(11,42))))))),(44,(46,48)))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,(((29,(4,(12,1))),((43,(19,18)),(39,(33,(38,((((31,(47,(28,8))),(2,3)),(30,(25,((9,40),((36,10),(26,(35,(45,20)))))))),((23,22),(((34,(41,(32,(37,(21,(42,11)))))),(27,24)),(44,(46,48)))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(29,(1,12))),((43,(18,19)),(39,(33,(38,(((30,(25,((40,9),((26,(35,(45,20))),(10,36))))),((31,(47,(8,28))),(3,2))),((22,23),(((24,27),(34,(41,(32,(37,(21,(42,11))))))),(44,(48,46)))))))))),(5,((14,13),(15,(16,17)))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(29,(12,1))),((43,(19,18)),(39,(33,(38,(((23,22),((44,(46,48)),((27,24),(34,(41,(32,(37,(21,(11,42))))))))),(((31,(47,(28,8))),(2,3)),(30,(25,((9,40),((35,(26,(20,45))),(36,10)))))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,(((29,(4,(1,12))),((43,(18,19)),(39,(33,(38,(((23,22),(((24,27),(34,(41,(32,(37,(21,(42,11))))))),(44,(48,46)))),((30,(25,((40,9),((36,10),((26,35),(45,20)))))),((31,(47,(8,28))),(3,2))))))))),(5,((14,13),(15,(16,17)))))));
	TREE * UNTITLED = [&R] (6,(7,((((29,4),(1,12)),((43,(18,19)),(39,(33,(38,(((22,23),(((24,27),(34,(41,(32,(37,(21,(42,11))))))),(44,(48,46)))),((30,(25,((40,9),((36,10),(35,(26,(45,20))))))),((31,(47,(8,28))),(3,2))))))))),(5,((14,13),(15,(16,17)))))));
	TREE * UNTITLED = [&R] (6,(7,((((29,4),(1,12)),((43,(18,19)),(39,(33,(38,(((((24,27),(34,(41,(32,(37,(21,(42,11))))))),(44,(48,46))),(22,23)),((30,(25,((40,9),((36,10),(35,(26,(45,20))))))),((31,(47,(8,28))),(3,2))))))))),(5,((14,13),(15,(16,17)))))));
	TREE * UNTITLED = [&R] (6,(7,((((29,4),(1,12)),((43,(18,19)),(39,(33,(38,(((23,22),(((24,27),(34,(41,(32,(37,(21,(11,42))))))),(44,(48,46)))),((30,(25,((40,9),((36,10),(26,(35,(20,45))))))),((31,(47,(8,28))),(3,2))))))))),(5,((14,13),(15,(16,17)))))));
	TREE * UNTITLED = [&R] (6,(7,(((29,(4,(12,1))),((43,(19,18)),(39,(33,(38,(((23,22),(((27,24),(34,(41,(32,(37,(21,(11,42))))))),(44,(46,48)))),((30,(25,((40,9),((10,36),(35,(26,(20,45))))))),((31,(47,(28,8))),(2,3))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((29,((4,(12,1)),((43,(19,18)),(39,(33,(38,(((23,22),(((27,24),(34,(41,(32,(37,(21,(11,42))))))),(44,(46,48)))),((30,(25,((9,40),(((26,35),(20,45)),(36,10))))),((31,(47,(28,8))),(2,3)))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((29,((4,(1,12)),((43,(18,19)),(39,(33,(38,(((23,22),(((34,(41,(32,(37,(21,(42,11)))))),(24,27)),(44,(48,46)))),((30,(25,((9,40),(((26,35),(45,20)),(10,36))))),((31,(47,(8,28))),(3,2)))))))))),(5,((14,13),(15,(16,17)))))));
	TREE * UNTITLED = [&R] (6,(7,(((29,(4,(1,12))),((43,(18,19)),(39,(33,(38,((((44,(48,46)),((24,27),(34,(41,(32,(37,(21,(42,11)))))))),(22,23)),((30,(25,(((10,36),(26,(35,(45,20)))),(40,9)))),((31,(47,(8,28))),(3,2))))))))),(5,((14,13),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((29,((4,(12,1)),((43,(19,18)),(39,(33,(38,((((31,(47,(28,8))),(2,3)),(30,(25,((9,40),((36,10),(35,(26,(45,20)))))))),((23,22),((44,(48,46)),((34,(41,(32,(37,(21,(42,11)))))),(27,24))))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,(((29,(4,(1,12))),((43,(18,19)),(39,(33,(38,(((22,23),(((24,27),(34,(41,(32,(37,(21,(42,11))))))),(44,(48,46)))),((30,(25,((40,9),((26,(35,(45,20))),(10,36))))),((31,(47,(8,28))),(3,2))))))))),(5,((14,13),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((((4,29),(12,1)),((43,(19,18)),(39,(33,(38,(((22,23),(((27,24),(34,(41,(32,(37,(21,(11,42))))))),(44,(46,48)))),((30,(25,((9,40),((10,36),((26,35),(20,45)))))),((31,(47,(28,8))),(2,3))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((29,((4,(12,1)),((43,(19,18)),(39,(33,(38,(((23,22),((44,(46,48)),((27,24),(34,(41,(32,(37,(21,(11,42))))))))),((30,(25,((9,40),((35,(26,(20,45))),(36,10))))),((31,(47,(28,8))),(2,3)))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((((4,29),(12,1)),((43,(19,18)),(39,(33,(38,(((30,(25,((9,40),((36,10),(26,(35,(20,45))))))),((31,(47,(28,8))),(2,3))),((23,22),((44,(46,48)),((34,(41,(32,(37,(21,(11,42)))))),(27,24)))))))))),(5,((13,14),(15,(17,16)))))));
	TREE * UNTITLED = [&R] (6,(7,((5,((13,14),(15,(17,16)))),(29,((4,(1,12)),((43,(19,18)),(39,(33,(38,(((23,22),(((27,24),(34,(41,(32,(37,(21,(11,42))))))),(44,(46,48)))),((30,(25,((9,40),((26,(35,(20,45))),(36,10))))),((31,(47,(28,8))),(2,3)))))))))))));
	TREE * UNTITLED = [&R] (6,(7,(((4,(29,(1,12))),((43,(18,19)),(39,(33,(38,(((22,23),(((24,27),(34,(41,(32,(37,(21,(42,11))))))),(44,(48,46)))),((30,(25,((40,9),((10,36),(35,(26,(45,20))))))),((31,(47,(8,28))),(3,2))))))))),(5,((14,13),(15,(16,17)))))));
	TREE * UNTITLED = [&R] (6,(7,((((4,29),(12,1)),((43,(18,19)),(39,(33,(38,((((44,(46,48)),((24,27),(34,(41,(32,(37,(21,(11,42)))))))),(22,23)),((30,(25,((40,9),((10,36),(26,(35,(20,45))))))),((31,(47,(8,28))),(3,2))))))))),(5,((14,13),(15,(16,17)))))));
	TREE * UNTITLED = [&R] (6,(7,(((29,(4,(1,12))),((43,(18,19)),(39,(33,(38,(((22,23),(((24,27),(34,(41,(32,(37,(21,(42,11))))))),(44,(48,46)))),((30,(25,((40,9),(((26,35),(45,20)),(10,36))))),((31,(47,(8,28))),(3,2))))))))),(5,((14,13),(15,(16,17)))))));
END;
