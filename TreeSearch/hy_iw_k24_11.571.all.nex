#NEXUS
[R-package APE, Wed Jun 06 12:28:29 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 47;
	TAXLABELS
		Namacalathus
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Novocrania
		Lingula
		Phoronis
		Sipunculus
		Serpula
		Tonicella
		Dentalium
		Pelagodiscus_atlanticus
		Terebratulina
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Glyptoria
		Gasconsia
		Haplophrentis_carinatus
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Micromitra
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Pedunculotheca_diania
		Salanygolina
		Siphonobolus_priscus
		Ussunia
		Tomteluva_perturbata
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Namacalathus,
		2	Cotyledion_tylodes,
		3	Loxosomella,
		4	Flustra,
		5	Novocrania,
		6	Lingula,
		7	Phoronis,
		8	Sipunculus,
		9	Serpula,
		10	Tonicella,
		11	Dentalium,
		12	Pelagodiscus_atlanticus,
		13	Terebratulina,
		14	Wiwaxia_corrugata,
		15	Halkieria_evangelista,
		16	Dailyatia,
		17	Acanthotretella_spinosa,
		18	Alisina,
		19	Askepasma_toddense,
		20	Antigonambonites_planus,
		21	Botsfordia,
		22	Clupeafumosus_socialis,
		23	Coolinia_pecten,
		24	Craniops,
		25	Eccentrotheca,
		26	Eoobolus,
		27	Glyptoria,
		28	Gasconsia,
		29	Haplophrentis_carinatus,
		30	Heliomedusa_orienta,
		31	Kutorgina_chengjiangensis,
		32	Lingulosacculus,
		33	Lingulellotreta_malongensis,
		34	Longtancunella_chengjiangensis,
		35	Micrina,
		36	Micromitra,
		37	Mickwitzia_muralensis,
		38	Mummpikia_nuda,
		39	Nisusia_sulcata,
		40	Orthis,
		41	Paterimitra,
		42	Pedunculotheca_diania,
		43	Salanygolina,
		44	Siphonobolus_priscus,
		45	Ussunia,
		46	Tomteluva_perturbata,
		47	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (4,((7,(1,(2,(25,(16,(15,(41,((42,29),(35,((((((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(32,(22,(17,44))))),(12,37)))))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((7,(1,(25,(2,(16,(15,(41,((29,42),(35,((((36,19),((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13))))))))),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),((22,32),(44,17)))),(37,12)))))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((7,(1,(25,(2,(16,(15,(41,((35,((((36,19),(((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46)))),(28,(30,(45,(24,5))))),((6,((22,(32,(44,17))),(33,(21,(38,26))))),(37,12)))),(29,42))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((42,29),(35,((((((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(22,(32,(44,17))))),(12,37)))))))))))),(3,((8,9),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,((7,(1,(25,(2,(16,(15,(41,((42,29),(35,((((36,19),(((31,(39,(27,(34,(18,(13,40)))))),(23,20)),(43,(47,46)))),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),((32,22),(17,44)))),(12,37)))))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),(7,(1,(25,(2,(16,(15,(41,((29,42),(35,(((((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13)))))))),(36,19)),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),((32,22),(44,17)))),(37,12))))))))))))));
	TREE * UNTITLED = [&R] (4,(((1,7),(2,(25,(16,(15,(41,((29,42),(35,((((19,36),(((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47)))),(28,(30,(45,(24,5))))),((6,((32,(22,(44,17))),(33,(21,(38,26))))),(37,12))))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((7,(1,(25,(2,(16,(15,(41,((42,29),(35,((((19,36),(((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(47,46)))),(28,(30,(45,(5,24))))),((6,((33,(21,(38,26))),((17,44),(32,22)))),(12,37)))))))))))),(3,((8,9),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,((7,(1,((25,2),(16,(15,(41,((29,42),(35,((((36,19),((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(13,40))))))))),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),((22,32),(44,17)))),(37,12))))))))))),(3,((8,9),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,(((7,1),(25,(2,(16,(15,(41,((35,((((((31,(39,(27,(34,(18,(13,40)))))),(23,20)),(43,(47,46))),(19,36)),(28,(30,(45,(5,24))))),((6,(((22,32),(17,44)),(33,(21,(26,38))))),(12,37)))),(42,29)))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((7,(1,((25,2),(16,(15,(41,((42,29),(35,(((((43,(47,46)),((23,20),(31,(39,(27,(34,(18,(13,40)))))))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),((32,22),(44,17)))),(12,37))))))))))),(3,((14,(11,10)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((7,(1,(2,(25,(16,(15,(41,((42,29),(35,((((((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),((32,22),(17,44)))),(12,37)))))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),(7,(1,(2,(25,(16,(15,(41,((29,42),(35,(((6,((33,(21,(38,26))),(32,(22,(44,17))))),(37,12)),((((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13)))))))),(36,19)),(28,(30,(45,(24,5)))))))))))))))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((42,29),(35,(((6,((33,(21,(26,38))),((22,32),(17,44)))),(12,37)),(((19,36),((43,(47,46)),((23,20),(31,(39,(27,(34,(18,(13,40))))))))),(28,(30,(45,(5,24))))))))))))))),(3,((8,9),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,((7,(1,(2,(25,(16,(15,(41,((42,29),(35,(((((43,(47,46)),((31,(39,(27,(34,(18,(13,40)))))),(23,20))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),((22,32),(17,44)))),(12,37)))))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((42,29),(35,((((((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(32,(22,(17,44))))),(12,37)))))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(10,11)))),(7,(1,(2,(25,(16,(15,(41,((29,42),(35,((((36,19),((43,(46,47)),((31,(39,(27,(34,(18,(40,13)))))),(20,23)))),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),(32,(22,(44,17))))),(37,12))))))))))))));
	TREE * UNTITLED = [&R] (4,((1,(7,((25,2),(16,(15,(41,((35,(((((43,(46,47)),((31,(39,(27,(34,(18,(40,13)))))),(20,23))),(36,19)),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),(22,(32,(44,17))))),(37,12)))),(29,42)))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((7,(1,(25,(2,(16,(15,(41,((35,((((19,36),(((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47)))),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),((32,22),(17,44)))),(37,12)))),(29,42))))))))),(3,((14,(10,11)),(8,9)))));
	TREE * UNTITLED = [&R] (4,(((7,1),((25,2),(16,(15,(41,((29,42),(35,(((6,((33,(21,(38,26))),(22,(32,(44,17))))),(37,12)),(((((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(46,47))),(36,19)),(28,(30,(45,(24,5))))))))))))),(3,((8,9),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,((7,(1,(25,(2,(16,(15,(41,((29,42),(35,((((((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47))),(36,19)),(28,(30,(45,(24,5))))),((6,(((22,32),(44,17)),(33,(21,(26,38))))),(37,12)))))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((42,29),(35,((((36,19),(((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46)))),(28,(30,(45,(5,24))))),((6,((33,(21,(38,26))),((32,22),(17,44)))),(12,37)))))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((7,(1,((2,25),(16,(15,(41,((35,(((((43,(46,47)),((23,20),(31,(39,(27,(34,(18,(13,40)))))))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(32,(22,(17,44))))),(12,37)))),(42,29)))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((1,(7,((2,25),(16,(15,(41,((35,((((((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47))),(36,19)),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),((32,22),(44,17)))),(37,12)))),(29,42)))))))),(3,((9,8),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,((1,(7,((2,25),(16,(15,(41,((35,((((36,19),(((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(47,46)))),(28,(30,(45,(5,24))))),((6,((32,(22,(17,44))),(33,(21,(38,26))))),(12,37)))),(42,29)))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((1,(7,((25,2),(16,(15,(41,((35,(((((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13)))))))),(19,36)),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),((32,22),(44,17)))),(37,12)))),(29,42)))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((35,(((((43,(47,46)),((23,20),(31,(39,(27,(34,(18,(13,40)))))))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(32,(22,(17,44))))),(12,37)))),(42,29))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,(((7,1),((2,25),(16,(15,(41,((35,((((36,19),(((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47)))),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),(32,(22,(44,17))))),(37,12)))),(29,42))))))),(3,((8,9),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,(((7,1),(25,(2,(16,(15,(41,((35,((((36,19),((43,(47,46)),((20,23),(31,(39,(27,(34,(18,(40,13))))))))),(28,(30,(45,(24,5))))),((6,((32,(22,(44,17))),(33,(21,(26,38))))),(37,12)))),(29,42)))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,(((1,7),(25,(2,(16,(15,(41,((42,29),(35,((((((31,(39,(27,(34,(18,(13,40)))))),(23,20)),(43,(47,46))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),((22,32),(44,17)))),(12,37))))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((7,(1,(2,(25,(16,(15,(41,((42,29),(35,((((36,19),((43,(46,47)),((23,20),(31,(39,(27,(34,(18,(13,40))))))))),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(22,(32,(17,44))))),(12,37)))))))))))),(3,((9,8),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,((7,(1,((2,25),(16,(15,(41,((29,42),(35,(((((43,(47,46)),((20,23),(31,(39,(27,(34,(18,(40,13)))))))),(36,19)),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),(22,(32,(44,17))))),(37,12))))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((29,42),(35,((((36,19),((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13))))))))),(28,(30,(45,(24,5))))),((6,(((32,22),(44,17)),(33,(21,(26,38))))),(37,12)))))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,(((7,1),(2,(25,(16,(15,(41,((29,42),(35,((((((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47))),(36,19)),(28,(30,(45,(24,5))))),((6,((33,(21,(26,38))),((22,32),(44,17)))),(37,12))))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((7,(1,(25,(2,(16,(15,(41,((29,42),(35,(((((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13)))))))),(36,19)),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),(22,(32,(17,44))))),(37,12)))))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((29,42),(35,((((36,19),((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13))))))))),(28,(30,(45,(24,5))))),((6,(((22,32),(44,17)),(33,(21,(38,26))))),(37,12)))))))))))),(3,((9,8),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((7,1),((2,25),(16,(15,(41,((35,((((((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47))),(36,19)),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),((22,32),(44,17)))),(37,12)))),(29,42)))))))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((29,42),(35,((((19,36),((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(13,40))))))))),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),(32,(22,(17,44))))),(37,12)))))))))))),(3,((8,9),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,((7,(1,(2,(25,(16,(15,(41,((35,(((((43,(47,46)),((23,20),(31,(39,(27,(34,(18,(40,13)))))))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(22,(32,(17,44))))),(12,37)))),(42,29))))))))),(3,((9,8),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((29,42),(35,((((36,19),((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13))))))))),(28,(30,(45,(5,24))))),((6,((33,(21,(38,26))),(32,(22,(44,17))))),(37,12)))))))))))),(3,((9,8),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,((3,((14,(11,10)),(8,9))),(7,(1,((2,25),(16,(15,(41,((35,((((19,36),((43,(46,47)),((31,(39,(27,(34,(18,(40,13)))))),(20,23)))),(28,(30,(45,(24,5))))),((6,((33,(21,(26,38))),(22,(32,(44,17))))),(37,12)))),(29,42))))))))));
	TREE * UNTITLED = [&R] (4,((7,(1,(2,(25,(16,(15,(41,((42,29),(35,((((((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36)),(28,(30,(45,(24,5))))),((6,((33,(21,(26,38))),(22,(32,(17,44))))),(12,37)))))))))))),(3,((8,9),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((42,29),(35,(((((43,(47,46)),((31,(39,(27,(34,(18,(13,40)))))),(23,20))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(32,(22,(17,44))))),(12,37)))))))))))),(3,((8,9),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,(((1,7),(2,(25,(16,(15,(41,((29,42),(35,((((36,19),(((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47)))),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),((32,22),(44,17)))),(37,12))))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,(((7,1),(25,(2,(16,(15,(41,((42,29),(35,((((19,36),(((31,(39,(27,(34,(18,(13,40)))))),(23,20)),(43,(47,46)))),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(22,(32,(17,44))))),(12,37))))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,(((7,1),((2,25),(16,(15,(41,((29,42),(35,(((((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13)))))))),(36,19)),(28,(30,(45,(24,5))))),((37,12),(6,((22,(32,(44,17))),(33,(21,(38,26)))))))))))))),(3,((8,9),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,((1,(7,(25,(2,(16,(15,(41,((29,42),(35,((((36,19),(((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47)))),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),(22,(32,(44,17))))),(37,12)))))))))))),(3,((9,8),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,(((1,7),((2,25),(16,(15,(41,((29,42),(35,((((36,19),((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(40,13))))))))),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),(22,(32,(44,17))))),(37,12)))))))))),(3,((9,8),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,((1,(7,(2,(25,(16,(15,(41,((42,29),(35,((((((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36)),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(22,(32,(17,44))))),(12,37)))))))))))),(3,((14,(10,11)),(9,8)))));
	TREE * UNTITLED = [&R] (4,((3,((14,(10,11)),(9,8))),(7,(1,(2,(25,(16,(15,(41,((42,29),(35,((((19,36),(((31,(39,(27,(34,(18,(13,40)))))),(23,20)),(43,(47,46)))),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(32,(22,(17,44))))),(12,37))))))))))))));
	TREE * UNTITLED = [&R] (4,(((7,1),(25,(2,(16,(15,(41,((29,42),(35,(((((43,(46,47)),((31,(39,(27,(34,(18,(40,13)))))),(20,23))),(36,19)),(28,(30,(45,(24,5))))),((6,((33,(21,(38,26))),(32,(22,(44,17))))),(37,12))))))))))),(3,((14,(11,10)),(8,9)))));
	TREE * UNTITLED = [&R] (4,((1,(7,(25,(2,(16,(15,(41,((35,(((28,(30,(45,(5,24)))),((36,19),(((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))))),((6,((33,(21,(26,38))),((22,32),(44,17)))),(12,37)))),(42,29))))))))),(3,((9,8),(14,(10,11))))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),(7,(1,((25,2),(16,(15,(41,((42,29),(35,((((((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36)),(28,(30,(45,(5,24))))),((6,((32,(22,(17,44))),(33,(21,(38,26))))),(12,37)))))))))))));
	TREE * UNTITLED = [&R] (4,((7,(1,(2,(25,(16,(15,(41,((42,29),(35,((((36,19),(((23,20),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46)))),(28,(30,(45,(5,24))))),((6,((33,(21,(26,38))),(32,(22,(17,44))))),(12,37)))))))))))),(3,((14,(11,10)),(9,8)))));
END;
