#NEXUS
[R-package APE, Sat Jun 02 01:18:28 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 46;
	TAXLABELS
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Novocrania
		Lingula
		Phoronis
		Sipunculus
		Serpula
		Tonicella
		Dentalium
		Pelagodiscus_atlanticus
		Terebratulina
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Glyptoria
		Gasconsia
		Haplophrentis_carinatus
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Micromitra
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Pedunculotheca_diania
		Salanygolina
		Siphonobolus_priscus
		Ussunia
		Tomteluva_perturbata
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Cotyledion_tylodes,
		2	Loxosomella,
		3	Flustra,
		4	Novocrania,
		5	Lingula,
		6	Phoronis,
		7	Sipunculus,
		8	Serpula,
		9	Tonicella,
		10	Dentalium,
		11	Pelagodiscus_atlanticus,
		12	Terebratulina,
		13	Wiwaxia_corrugata,
		14	Halkieria_evangelista,
		15	Dailyatia,
		16	Acanthotretella_spinosa,
		17	Alisina,
		18	Askepasma_toddense,
		19	Antigonambonites_planus,
		20	Botsfordia,
		21	Clupeafumosus_socialis,
		22	Coolinia_pecten,
		23	Craniops,
		24	Eccentrotheca,
		25	Eoobolus,
		26	Glyptoria,
		27	Gasconsia,
		28	Haplophrentis_carinatus,
		29	Heliomedusa_orienta,
		30	Kutorgina_chengjiangensis,
		31	Lingulosacculus,
		32	Lingulellotreta_malongensis,
		33	Longtancunella_chengjiangensis,
		34	Micrina,
		35	Micromitra,
		36	Mickwitzia_muralensis,
		37	Mummpikia_nuda,
		38	Nisusia_sulcata,
		39	Orthis,
		40	Paterimitra,
		41	Pedunculotheca_diania,
		42	Salanygolina,
		43	Siphonobolus_priscus,
		44	Ussunia,
		45	Tomteluva_perturbata,
		46	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(24,(1,((15,14),(29,((40,(34,(((((32,5),(21,(31,(43,16)))),(25,(20,37))),(11,36)),(((((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45))),(35,18)),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,((24,1),((15,14),(29,((40,(34,(((((32,5),((31,21),(43,16))),(25,(20,37))),(11,36)),(((35,18),((42,(46,45)),((30,(38,(26,(33,(17,(39,12)))))),(22,19)))),(27,(44,(4,23))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(13,9)))),(6,((24,1),((15,14),(29,((40,(34,((((((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))),(35,18)),(27,(44,(4,23)))),((((32,5),(21,(31,(43,16)))),(25,(20,37))),(11,36))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(9,13)),(8,7))),(6,(1,(24,((15,14),(29,((40,(34,(((((32,5),(21,(31,(43,16)))),(25,(20,37))),(11,36)),(((((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45))),(35,18)),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(13,9)),(7,8))),(6,(24,(1,((15,14),(29,((40,(34,(((((32,5),((31,21),(16,43))),(25,(37,20))),(36,11)),(((((30,(38,(26,(33,(17,(12,39)))))),(19,22)),(42,(45,46))),(18,35)),(27,(44,(23,4))))))),(28,41)))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(9,13)))),(6,((24,1),((14,15),(29,((40,(34,((((((31,21),(16,43)),(5,32)),(25,(37,20))),(36,11)),((((42,(45,46)),((19,22),(30,(38,(26,(33,(17,(12,39)))))))),(18,35)),(27,(44,(23,4))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(24,(1,((14,15),(29,((40,(34,(((((32,5),(21,(31,(16,43)))),(25,(20,37))),(11,36)),(((35,18),((42,(45,46)),((30,(38,(26,(33,(17,(39,12)))))),(22,19)))),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(1,(24,((15,14),(29,((40,(34,(((((5,32),((31,21),(43,16))),(25,(20,37))),(11,36)),(((35,18),(((30,(38,(26,(33,(17,(12,39)))))),(22,19)),(42,(46,45)))),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(9,13)))),(6,(1,(24,((14,15),(29,((40,(34,(((((5,32),(31,(21,(16,43)))),(25,(37,20))),(36,11)),(((((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(45,46))),(18,35)),(27,(44,(23,4))))))),(28,41)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(1,(24,((15,14),(29,((40,(34,(((((32,5),(31,(21,(43,16)))),(25,(20,37))),(11,36)),(((35,18),(((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45)))),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(24,(1,((15,14),(29,((40,(34,((((35,18),(((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45)))),(27,(44,(4,23)))),((((32,5),((31,21),(43,16))),(25,(20,37))),(11,36))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(13,9)))),(6,((24,1),((14,15),(29,((40,(34,(((((5,32),((21,31),(16,43))),(25,(37,20))),(36,11)),(((18,35),((42,(45,46)),((30,(38,(26,(33,(17,(12,39)))))),(19,22)))),(27,(44,(23,4))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(13,9)))),(6,((24,1),((14,15),(29,((40,(34,((((18,35),(((30,(38,(26,(33,(17,(12,39)))))),(19,22)),(42,(45,46)))),(27,(44,(23,4)))),((((5,32),(31,(21,(43,16)))),(25,(37,20))),(36,11))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(13,9)))),(6,(24,(1,((14,15),(29,((40,(34,(((((21,(31,(16,43))),(5,32)),(25,(37,20))),(36,11)),(((18,35),(((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46)))),(27,(44,(23,4))))))),(28,41)))))))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((14,15),(29,((40,(34,(((((5,32),(31,(21,(16,43)))),(25,(37,20))),(36,11)),((((42,(45,46)),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(18,35)),(27,(44,(23,4))))))),(28,41))))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(9,13)),(8,7))),(6,((1,24),((15,14),(29,((40,(34,((((35,18),(((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))),(27,(44,(4,23)))),((((5,32),(31,(21,(43,16)))),(25,(20,37))),(11,36))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(13,9)))),(6,(1,(24,((15,14),(29,((40,(34,(((((32,5),((31,21),(43,16))),(25,(20,37))),(11,36)),(((((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(45,46))),(35,18)),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(13,9)))),(6,(1,(24,((14,15),(29,((40,(34,(((((5,32),(31,(21,(16,43)))),(25,(37,20))),(36,11)),(((((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(46,45))),(18,35)),(27,(44,(23,4))))))),(28,41)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(24,(1,((15,14),(29,((40,(34,(((27,(44,(4,23))),((18,35),(((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))))),((((31,(21,(43,16))),(32,5)),(25,(20,37))),(11,36))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(1,(24,((14,15),(29,((40,(34,(((((31,(21,(43,16))),(32,5)),(25,(20,37))),(11,36)),(((35,18),(((22,19),(30,(38,(26,(33,(17,(12,39))))))),(42,(46,45)))),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(24,(1,((15,14),(29,((40,(34,(((((32,5),((21,31),(43,16))),(25,(20,37))),(11,36)),(((18,35),(((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45)))),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(9,13)))),(6,(1,(24,((15,14),(29,((41,28),(40,(34,(((((21,(31,(16,43))),(32,5)),(25,(37,20))),(36,11)),((((42,(46,45)),((30,(38,(26,(33,(17,(39,12)))))),(19,22))),(18,35)),(27,(44,(23,4)))))))))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(9,13)))),(6,(24,(1,((14,15),(29,((40,(34,(((27,(44,(4,23))),((((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45))),(35,18))),((((32,5),(21,(31,(43,16)))),(25,(20,37))),(11,36))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(9,13)),(8,7))),(6,(1,(24,((15,14),(29,((40,(34,(((((42,(46,45)),((22,19),(30,(38,(26,(33,(17,(39,12)))))))),(35,18)),(27,(44,(4,23)))),((((21,(31,(43,16))),(5,32)),(25,(20,37))),(11,36))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(13,9)),(7,8))),(6,(1,(24,((14,15),(29,((40,(34,(((27,(44,(23,4))),((35,18),(((30,(38,(26,(33,(17,(12,39)))))),(19,22)),(42,(45,46))))),((((31,(21,(16,43))),(32,5)),(25,(37,20))),(36,11))))),(28,41)))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(13,9)))),(6,(24,(1,((14,15),(29,((40,(34,((((18,35),(((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46)))),(27,(44,(23,4)))),((((31,(21,(16,43))),(32,5)),(25,(37,20))),(36,11))))),(28,41)))))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(9,13)),(8,7))),(6,(24,(1,((29,((40,(34,((((35,18),(((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))),(27,(44,(23,4)))),((((32,5),((31,21),(43,16))),(25,(20,37))),(11,36))))),(41,28))),(15,14)))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(13,9)))),(6,(1,(24,((14,15),(29,((40,(34,((((25,(37,20)),((5,32),((21,31),(16,43)))),(36,11)),(((18,35),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(45,46)))),(27,(44,(23,4))))))),(28,41)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(1,(24,((15,14),(29,((40,(34,(((((32,5),(31,(21,(43,16)))),(25,(20,37))),(11,36)),(((((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45))),(35,18)),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(13,9)),(7,8))),(6,((24,1),((14,15),(29,((40,(34,(((((5,32),(31,(21,(16,43)))),(25,(37,20))),(36,11)),(((((19,22),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46))),(18,35)),(27,(44,(23,4))))))),(28,41))))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(13,9)),(7,8))),(6,(24,(1,((14,15),(29,((40,(34,((((25,(37,20)),((5,32),(31,(21,(16,43))))),(36,11)),(((18,35),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(45,46)))),(27,(44,(23,4))))))),(28,41)))))))));
	TREE * UNTITLED = [&R] (3,((6,((1,24),((14,15),(29,((40,(34,(((27,(44,(23,4))),((((30,(38,(26,(33,(17,(12,39)))))),(19,22)),(42,(45,46))),(18,35))),((((32,5),((31,21),(16,43))),(25,(37,20))),(36,11))))),(28,41)))))),(2,((7,8),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(24,(1,((15,14),(29,((40,(34,(((((31,(21,(43,16))),(32,5)),(25,(20,37))),(11,36)),(((18,35),(((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45)))),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(13,9)),(8,7))),(6,(1,(24,((15,14),(29,((40,(34,(((((32,5),(21,(31,(43,16)))),(25,(20,37))),(11,36)),(((35,18),(((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45)))),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(1,(24,((15,14),(29,((40,(34,((((((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45))),(35,18)),(27,(44,(4,23)))),(((25,(20,37)),((5,32),(31,(21,(16,43))))),(11,36))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(13,9)))),(6,(24,(1,((14,15),(29,((40,(34,(((((5,32),((43,16),(31,21))),(25,(37,20))),(36,11)),((((42,(45,46)),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(18,35)),(27,(44,(23,4))))))),(28,41)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,((1,24),((15,14),(29,((40,(34,(((((21,(31,(16,43))),(32,5)),(25,(20,37))),(11,36)),(((((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))),(35,18)),(27,(44,(4,23))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,((2,((10,(9,13)),(8,7))),(6,(24,(1,((15,14),(29,((40,(34,(((27,(44,(4,23))),((((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45))),(35,18))),((((32,5),(31,(21,(43,16)))),(25,(20,37))),(11,36))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,((24,1),((15,14),(29,((40,(34,(((((5,32),(31,(21,(43,16)))),(25,(20,37))),(11,36)),(((((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(46,45))),(35,18)),(27,(44,(4,23))))))),(41,28))))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(1,(24,((15,14),(29,((40,(34,(((((32,5),(31,(21,(43,16)))),(25,(20,37))),(11,36)),(((35,18),(((30,(38,(26,(33,(17,(39,12)))))),(22,19)),(42,(45,46)))),(27,(44,(4,23))))))),(41,28)))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(13,9)))),(6,((24,1),((14,15),(29,((40,(34,(((((5,32),(31,(21,(16,43)))),(25,(37,20))),(36,11)),(((((30,(38,(26,(33,(17,(12,39)))))),(19,22)),(42,(45,46))),(18,35)),(27,(44,(23,4))))))),(28,41))))))));
END;
