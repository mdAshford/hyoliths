#NEXUS
[R-package APE, Fri Jun 01 21:17:14 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 46;
	TAXLABELS
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Novocrania
		Lingula
		Phoronis
		Sipunculus
		Serpula
		Tonicella
		Dentalium
		Pelagodiscus_atlanticus
		Terebratulina
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Glyptoria
		Gasconsia
		Haplophrentis_carinatus
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Micromitra
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Pedunculotheca_diania
		Salanygolina
		Siphonobolus_priscus
		Ussunia
		Tomteluva_perturbata
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Cotyledion_tylodes,
		2	Loxosomella,
		3	Flustra,
		4	Novocrania,
		5	Lingula,
		6	Phoronis,
		7	Sipunculus,
		8	Serpula,
		9	Tonicella,
		10	Dentalium,
		11	Pelagodiscus_atlanticus,
		12	Terebratulina,
		13	Wiwaxia_corrugata,
		14	Halkieria_evangelista,
		15	Dailyatia,
		16	Acanthotretella_spinosa,
		17	Alisina,
		18	Askepasma_toddense,
		19	Antigonambonites_planus,
		20	Botsfordia,
		21	Clupeafumosus_socialis,
		22	Coolinia_pecten,
		23	Craniops,
		24	Eccentrotheca,
		25	Eoobolus,
		26	Glyptoria,
		27	Gasconsia,
		28	Haplophrentis_carinatus,
		29	Heliomedusa_orienta,
		30	Kutorgina_chengjiangensis,
		31	Lingulosacculus,
		32	Lingulellotreta_malongensis,
		33	Longtancunella_chengjiangensis,
		34	Micrina,
		35	Micromitra,
		36	Mickwitzia_muralensis,
		37	Mummpikia_nuda,
		38	Nisusia_sulcata,
		39	Orthis,
		40	Paterimitra,
		41	Pedunculotheca_diania,
		42	Salanygolina,
		43	Siphonobolus_priscus,
		44	Ussunia,
		45	Tomteluva_perturbata,
		46	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((40,(36,(29,(34,(((21,((31,(16,43)),((5,11),(32,(20,(25,37)))))),(((((22,19),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46))),(18,35)),(27,(44,(23,4))))),(28,41)))))),(14,15))))),(2,((7,8),(10,(9,13))))));
	TREE * UNTITLED = [&R] (3,((6,((24,1),((14,15),(40,(36,(29,(34,(((21,((31,((11,5),(32,(20,(37,25))))),(43,16))),(((((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))),(35,18)),(27,(44,(4,23))))),(41,28))))))))),(2,((8,7),(10,(9,13))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((15,14),(40,(36,(29,(34,(((21,((31,((32,(20,(25,37))),(5,11))),(16,43))),(((27,(44,(23,4))),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39))))))))),(35,18))),(28,41)))))))))),(2,((7,8),(10,(9,13))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((21,((31,(43,16)),((11,5),(32,(20,(25,37)))))),(((27,(44,(4,23))),(35,18)),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45))))),(41,28)))))),(15,14))))),(2,((7,8),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((14,15),(40,(36,(29,(34,(((21,(31,((43,16),((11,5),(32,(20,(25,37))))))),(((((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45))),(27,(44,(4,23)))),(35,18))),(41,28)))))))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((40,(36,(29,(34,(((21,((31,(43,16)),((11,5),(32,(20,(37,25)))))),(((27,(44,(4,23))),(35,18)),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))))),(41,28)))))),(15,14))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((14,15),(40,(36,(29,(34,(((21,((31,(43,16)),((32,(20,(25,37))),(11,5)))),((((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))),(35,18)),(27,(44,(4,23))))),(41,28)))))))))),(2,((10,(13,9)),(8,7)))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((40,(36,(29,(34,(((21,((31,(16,43)),((32,(20,(25,37))),(5,11)))),(((18,35),(((22,19),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46)))),(27,(44,(23,4))))),(28,41)))))),(14,15))))),(2,((10,(9,13)),(7,8)))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((15,14),(40,(36,(29,(34,(((21,((31,((11,5),(32,(20,(37,25))))),(43,16))),(((27,(44,(4,23))),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))),(35,18))),(41,28)))))))))),(2,((10,(13,9)),(8,7)))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((21,((31,((5,11),(32,(20,(25,37))))),(43,16))),((((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))),(35,18)),(27,(44,(4,23))))),(41,28)))))),(15,14))))),(2,((10,(13,9)),(8,7)))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((14,15),(40,(36,(29,(34,(((21,(31,((43,16),((11,5),(32,(20,(37,25))))))),(((35,18),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45)))),(27,(44,(4,23))))),(41,28)))))))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,((24,1),((15,14),(40,(36,(29,(34,(((21,((31,((11,5),(32,(20,(37,25))))),(43,16))),(((27,(44,(4,23))),(18,35)),((42,(46,45)),((30,(38,(26,(33,(17,(39,12)))))),(19,22))))),(41,28))))))))),(2,((7,8),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((15,14),(40,(36,(29,(34,(((21,((31,(16,43)),((5,11),(32,(20,(37,25)))))),(((((22,19),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46))),(27,(44,(23,4)))),(18,35))),(28,41)))))))))),(2,((7,8),(10,(9,13))))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((40,(36,(29,(34,((28,41),((((27,(44,(23,4))),(18,35)),((42,(45,46)),((30,(38,(26,(33,(17,(12,39)))))),(22,19)))),(21,(31,(((32,(20,(25,37))),(5,11)),(16,43)))))))))),(14,15))))),(2,((7,8),(10,(9,13))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((21,((31,((11,5),(32,(20,(37,25))))),(43,16))),(((27,(44,(4,23))),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))),(35,18))),(41,28)))))),(15,14))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,((24,1),((15,14),(40,(36,(29,(34,(((21,(31,((43,16),((11,5),(32,(20,(37,25))))))),(((27,(44,(4,23))),((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12))))))))),(35,18))),(41,28))))))))),(2,((10,(13,9)),(8,7)))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((21,((31,(16,43)),((5,11),(32,(20,(25,37)))))),(((18,35),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39))))))))),(27,(44,(23,4))))),(28,41)))))),(14,15))))),(2,((8,7),(10,(9,13))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((15,14),(40,(36,(29,(34,((41,28),((21,(31,(((32,(20,(37,25))),(11,5)),(43,16)))),(((35,18),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45)))),(27,(44,(4,23)))))))))))))),(2,((7,8),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,((24,1),((40,(36,(29,(34,(((21,((31,(43,16)),((11,5),(32,(20,(25,37)))))),((((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))),(35,18)),(27,(44,(4,23))))),(41,28)))))),(15,14)))),(2,((8,7),(10,(9,13))))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((40,(36,(29,(34,(((21,((31,((11,5),(32,(20,(37,25))))),(16,43))),(((((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45))),(27,(44,(4,23)))),(35,18))),(41,28)))))),(15,14))))),(2,((10,(13,9)),(8,7)))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((21,((31,((11,5),(32,(20,(37,25))))),(43,16))),(((27,(44,(4,23))),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45)))),(18,35))),(41,28)))))),(15,14))))),(2,((10,(13,9)),(8,7)))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(9,13)))),(6,((1,24),((40,(36,(29,(34,(((21,((31,(16,43)),((32,(20,(25,37))),(5,11)))),(((((30,(38,(26,(33,(17,(12,39)))))),(22,19)),(42,(45,46))),(27,(44,(23,4)))),(18,35))),(28,41)))))),(14,15))))));
	TREE * UNTITLED = [&R] (3,((6,((1,24),((15,14),(40,(36,(29,(34,(((21,((31,(43,16)),((11,5),(32,(20,(37,25)))))),(((35,18),(27,(44,(4,23)))),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45))))),(41,28))))))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((21,(31,((43,16),((11,5),(32,(20,(37,25))))))),(((35,18),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45)))),(27,(44,(4,23))))),(41,28)))))),(15,14))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((21,((31,((32,(20,(37,25))),(11,5))),(43,16))),((((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(12,39)))))))),(27,(44,(4,23)))),(35,18))),(41,28)))))),(15,14))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,((24,1),((15,14),(40,(36,(29,(34,(((((35,18),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(46,45)))),(27,(44,(4,23)))),(21,((31,(43,16)),((32,(20,(37,25))),(11,5))))),(41,28))))))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((((27,(44,(4,23))),(35,18)),((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12))))))))),(21,((31,(43,16)),((11,5),(32,(20,(37,25))))))),(41,28)))))),(15,14))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((40,(36,(29,(34,(((((((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))),(27,(44,(4,23)))),(18,35)),(21,((31,(43,16)),((32,(20,(25,37))),(5,11))))),(41,28)))))),(15,14))))),(2,((10,(13,9)),(8,7)))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((40,(36,(29,(34,(((21,((31,((5,11),(32,(20,(25,37))))),(16,43))),(((35,18),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39))))))))),(27,(44,(23,4))))),(28,41)))))),(14,15))))),(2,((7,8),(10,(9,13))))));
	TREE * UNTITLED = [&R] (3,((2,((8,7),(10,(9,13)))),(6,(1,(24,((15,14),(40,(36,(29,(34,(((21,((31,((32,(20,(37,25))),(11,5))),(43,16))),(((((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))),(27,(44,(4,23)))),(35,18))),(41,28))))))))))));
	TREE * UNTITLED = [&R] (3,((2,((7,8),(10,(9,13)))),(6,(24,(1,((14,15),(40,(36,(29,(34,(((21,(31,(((32,(20,(37,25))),(5,11)),(16,43)))),(((27,(44,(23,4))),(18,35)),((42,(45,46)),((22,19),(30,(38,(26,(33,(17,(12,39)))))))))),(28,41))))))))))));
	TREE * UNTITLED = [&R] (3,((6,((1,24),((40,(36,(29,(34,(((21,((31,(16,43)),((5,11),(32,(20,(25,37)))))),(((27,(44,(23,4))),(((22,19),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46)))),(18,35))),(28,41)))))),(14,15)))),(2,((7,8),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(1,(24,((14,15),(40,(36,(29,(34,(((((27,(44,(4,23))),(35,18)),(((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45)))),(21,((31,(43,16)),((32,(20,(37,25))),(11,5))))),(41,28)))))))))),(2,((10,(9,13)),(8,7)))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((15,14),(40,(36,(29,(34,(((21,((31,(16,43)),((32,(20,(37,25))),(5,11)))),(((27,(44,(23,4))),(((22,19),(30,(38,(26,(33,(17,(12,39))))))),(42,(45,46)))),(35,18))),(28,41)))))))))),(2,((10,(9,13)),(7,8)))));
	TREE * UNTITLED = [&R] (3,((6,((1,24),((14,15),(40,(36,(29,(34,(((21,((31,(43,16)),((32,(20,(25,37))),(11,5)))),((((42,(46,45)),((19,22),(30,(38,(26,(33,(17,(39,12)))))))),(27,(44,(4,23)))),(18,35))),(41,28))))))))),(2,((8,7),(10,(13,9))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((21,((31,(43,16)),((11,5),(32,(20,(37,25)))))),(((27,(44,(4,23))),(35,18)),(((30,(38,(26,(33,(17,(39,12)))))),(19,22)),(42,(45,46))))),(41,28)))))),(15,14))))),(2,((10,(9,13)),(8,7)))));
	TREE * UNTITLED = [&R] (3,((6,((24,1),((40,(36,(29,(34,(((((35,18),(27,(44,(23,4)))),(((22,19),(30,(38,(26,(33,(17,(39,12))))))),(42,(45,46)))),(21,(31,((16,43),((32,(20,(25,37))),(5,11)))))),(28,41)))))),(14,15)))),(2,((10,(9,13)),(7,8)))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((21,(31,(((5,11),(32,(20,(25,37)))),(16,43)))),(((27,(44,(23,4))),(((30,(38,(26,(33,(17,(12,39)))))),(22,19)),(42,(45,46)))),(18,35))),(28,41)))))),(14,15))))),(2,((7,8),(10,(9,13))))));
	TREE * UNTITLED = [&R] (3,((6,(24,(1,((40,(36,(29,(34,(((((((19,22),(30,(38,(26,(33,(17,(39,12))))))),(42,(46,45))),(27,(44,(4,23)))),(18,35)),(21,(31,(((32,(20,(25,37))),(11,5)),(43,16))))),(41,28)))))),(15,14))))),(2,((10,(13,9)),(8,7)))));
END;
