#NEXUS
[R-package APE, Mon Jun 04 22:35:59 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 47;
	TAXLABELS
		Namacalathus
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Novocrania
		Lingula
		Phoronis
		Sipunculus
		Serpula
		Tonicella
		Dentalium
		Pelagodiscus_atlanticus
		Terebratulina
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Glyptoria
		Gasconsia
		Haplophrentis_carinatus
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Micromitra
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Pedunculotheca_diania
		Salanygolina
		Siphonobolus_priscus
		Ussunia
		Tomteluva_perturbata
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Namacalathus,
		2	Cotyledion_tylodes,
		3	Loxosomella,
		4	Flustra,
		5	Novocrania,
		6	Lingula,
		7	Phoronis,
		8	Sipunculus,
		9	Serpula,
		10	Tonicella,
		11	Dentalium,
		12	Pelagodiscus_atlanticus,
		13	Terebratulina,
		14	Wiwaxia_corrugata,
		15	Halkieria_evangelista,
		16	Dailyatia,
		17	Acanthotretella_spinosa,
		18	Alisina,
		19	Askepasma_toddense,
		20	Antigonambonites_planus,
		21	Botsfordia,
		22	Clupeafumosus_socialis,
		23	Coolinia_pecten,
		24	Craniops,
		25	Eccentrotheca,
		26	Eoobolus,
		27	Glyptoria,
		28	Gasconsia,
		29	Haplophrentis_carinatus,
		30	Heliomedusa_orienta,
		31	Kutorgina_chengjiangensis,
		32	Lingulosacculus,
		33	Lingulellotreta_malongensis,
		34	Longtancunella_chengjiangensis,
		35	Micrina,
		36	Micromitra,
		37	Mickwitzia_muralensis,
		38	Mummpikia_nuda,
		39	Nisusia_sulcata,
		40	Orthis,
		41	Paterimitra,
		42	Pedunculotheca_diania,
		43	Salanygolina,
		44	Siphonobolus_priscus,
		45	Ussunia,
		46	Tomteluva_perturbata,
		47	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((25,(2,((16,15),(30,((42,29),(41,(35,(((28,(45,(5,24))),((((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36))),((6,((33,(21,(38,26))),(22,(32,(17,44))))),(37,12)))))))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((2,(25,((15,16),(30,((29,42),(41,(35,(((28,(45,(24,5))),(((43,(47,46)),((23,20),(31,(39,(27,(34,(18,(40,13)))))))),(36,19))),((6,((33,(21,(38,26))),(22,(32,(44,17))))),(12,37)))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((2,(25,((16,15),(30,((41,(35,(((28,(45,(5,24))),((36,19),(((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))))),((6,((22,(32,(17,44))),(33,(21,(38,26))))),(37,12))))),(42,29)))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((2,(25,((15,16),(30,((29,42),(41,(35,(((((43,(47,46)),((23,20),(31,(39,(27,(34,(18,(40,13)))))))),(36,19)),(28,(45,(5,24)))),((37,12),(6,((33,(21,(26,38))),(32,(22,(44,17)))))))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),(((25,2),((15,16),(30,((29,42),(41,(35,((((19,36),(((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(47,46)))),(28,(45,(24,5)))),((6,((33,(21,(26,38))),(32,(22,(44,17))))),(12,37))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((25,(2,((15,16),(30,((29,42),(41,(35,(((28,(45,(24,5))),((36,19),(((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(47,46))))),((6,((33,(21,(38,26))),(32,(22,(17,44))))),(12,37)))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),(((25,2),((15,16),(30,((41,(35,(((28,(45,(5,24))),((((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36))),((6,((33,(21,(26,38))),((22,32),(17,44)))),(37,12))))),(42,29))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((1,7),(2,(25,((16,15),(30,((42,29),(41,(35,(((((43,(47,46)),((20,23),(31,(39,(27,(34,(18,(13,40)))))))),(19,36)),(28,(45,(5,24)))),((6,((33,(21,(38,26))),(32,(22,(17,44))))),(37,12)))))))))))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),(((25,2),((16,15),(30,((41,(35,((((19,36),((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(13,40))))))))),(28,(45,(5,24)))),((6,((33,(21,(38,26))),(32,(22,(17,44))))),(37,12))))),(42,29))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((2,(25,((16,15),(30,((41,(35,((((19,36),(((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47)))),(28,(45,(24,5)))),((6,((33,(21,(38,26))),((22,32),(44,17)))),(12,37))))),(29,42)))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((25,(2,((15,16),(30,((41,(35,(((28,(45,(24,5))),(((43,(46,47)),((23,20),(31,(39,(27,(34,(18,(40,13)))))))),(36,19))),((6,((33,(21,(26,38))),(32,(22,(17,44))))),(12,37))))),(29,42)))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),(((25,2),((16,15),(30,((41,(35,(((28,(45,(5,24))),((36,19),((43,(47,46)),((20,23),(31,(39,(27,(34,(18,(13,40)))))))))),((6,((33,(21,(26,38))),(22,(32,(17,44))))),(37,12))))),(42,29))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((25,(2,((16,15),(30,((42,29),(41,(35,(((((43,(47,46)),((20,23),(31,(39,(27,(34,(18,(13,40)))))))),(19,36)),(28,(45,(5,24)))),((6,((22,(32,(17,44))),(33,(21,(38,26))))),(37,12)))))))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((25,(2,((15,16),(30,((29,42),(41,(35,(((28,(45,(24,5))),((((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47))),(36,19))),((6,((33,(21,(38,26))),(32,(22,(44,17))))),(12,37)))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((25,(2,((16,15),(30,((41,(35,(((28,(45,(5,24))),(((43,(47,46)),((31,(39,(27,(34,(18,(40,13)))))),(20,23))),(19,36))),((6,((33,(21,(38,26))),(32,(22,(17,44))))),(37,12))))),(42,29)))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((25,(2,((15,16),(30,((42,29),(41,(35,(((28,(45,(5,24))),((19,36),(((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))))),((6,((22,(32,(17,44))),(33,(21,(38,26))))),(37,12)))))))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((14,(10,11)),(9,8))),((2,(25,((15,16),(30,((29,42),(41,(35,((((((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47))),(36,19)),(28,(45,(24,5)))),((6,((33,(21,(26,38))),((22,32),(44,17)))),(12,37)))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((25,(2,((15,16),(30,((29,42),(41,(35,(((((43,(46,47)),((23,20),(31,(39,(27,(34,(18,(40,13)))))))),(36,19)),(28,(45,(24,5)))),((6,((33,(21,(26,38))),(22,(32,(44,17))))),(12,37)))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((2,(25,((15,16),(30,((29,42),(41,(35,(((28,(45,(24,5))),(((43,(46,47)),((23,20),(31,(39,(27,(34,(18,(40,13)))))))),(36,19))),((6,((33,(21,(26,38))),((32,22),(17,44)))),(12,37)))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((7,1),(25,(2,((15,16),(30,((29,42),(41,(35,(((28,(45,(24,5))),((((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47))),(36,19))),((6,((33,(21,(26,38))),(32,(22,(44,17))))),(12,37)))))))))))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(10,11)))),((2,(25,((15,16),(30,((29,42),(41,(35,(((28,(45,(24,5))),(((43,(47,46)),((23,20),(31,(39,(27,(34,(18,(40,13)))))))),(36,19))),((6,((22,(32,(44,17))),(33,(21,(26,38))))),(12,37)))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,(((7,1),((25,2),((16,15),(30,((42,29),(41,(35,((((19,36),(((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46)))),(28,(45,(5,24)))),((6,((33,(21,(26,38))),(22,(32,(17,44))))),(37,12)))))))))),(3,((8,9),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((1,7),((25,2),((16,15),(30,((41,(35,((((19,36),((43,(47,46)),((31,(39,(27,(34,(18,(13,40)))))),(20,23)))),(28,(45,(5,24)))),((6,((33,(21,(38,26))),(22,(32,(17,44))))),(37,12))))),(42,29))))))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((1,7),(2,(25,((16,15),(30,((42,29),(41,(35,((((36,19),((43,(47,46)),((20,23),(31,(39,(27,(34,(18,(40,13))))))))),(28,(45,(5,24)))),((6,((22,(32,(17,44))),(33,(21,(26,38))))),(37,12)))))))))))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),((25,(2,((15,16),(30,((41,(35,(((28,(45,(24,5))),((((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47))),(36,19))),((6,((33,(21,(26,38))),((32,22),(17,44)))),(12,37))))),(29,42)))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((14,(11,10)),(8,9))),((2,(25,((16,15),(30,((41,(35,(((28,(45,(5,24))),((((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36))),((6,((33,(21,(38,26))),(32,(22,(44,17))))),(37,12))))),(42,29)))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((((25,2),((16,15),(30,((42,29),(41,(35,((((((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(36,19)),(28,(45,(5,24)))),((6,((33,(21,(26,38))),(22,(32,(17,44))))),(37,12))))))))),(1,7)),(3,((8,9),(14,(11,10))))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),(((25,2),((15,16),(30,((41,(35,(((28,(45,(5,24))),((((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36))),((6,((33,(21,(38,26))),(22,(32,(17,44))))),(37,12))))),(42,29))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),(((25,2),((16,15),(30,((41,(35,((((((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36)),(28,(45,(5,24)))),((6,((33,(21,(38,26))),((22,32),(17,44)))),(37,12))))),(42,29))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),(((25,2),((15,16),(30,((41,(35,(((28,(45,(5,24))),((((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36))),((6,(((22,32),(17,44)),(33,(21,(38,26))))),(37,12))))),(42,29))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((25,(2,((16,15),(30,((42,29),(41,(35,((((36,19),((43,(47,46)),((20,23),(31,(39,(27,(34,(18,(13,40))))))))),(28,(45,(5,24)))),((6,((33,(21,(38,26))),(32,(22,(44,17))))),(37,12)))))))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((9,8),(14,(10,11)))),(((2,25),((16,15),(30,((29,42),(41,(35,((((36,19),(((23,20),(31,(39,(27,(34,(18,(40,13))))))),(43,(46,47)))),(28,(45,(24,5)))),((6,((33,(21,(26,38))),(22,(32,(44,17))))),(12,37))))))))),(1,7))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),(((25,2),((16,15),(30,((42,29),(41,(35,(((28,(45,(5,24))),((((20,23),(31,(39,(27,(34,(18,(40,13))))))),(43,(47,46))),(19,36))),((6,((33,(21,(38,26))),(22,(32,(17,44))))),(37,12))))))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((25,(2,((16,15),(30,((42,29),(41,(35,((((((31,(39,(27,(34,(18,(13,40)))))),(23,20)),(43,(47,46))),(36,19)),(28,(45,(5,24)))),((6,((33,(21,(38,26))),(22,(32,(17,44))))),(37,12)))))))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((25,(2,((16,15),(30,((41,(35,((((((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46))),(19,36)),(28,(45,(5,24)))),((6,((22,(32,(17,44))),(33,(21,(38,26))))),(37,12))))),(42,29)))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((14,(11,10)),(8,9))),((2,(25,((16,15),(30,((42,29),(41,(35,(((((43,(46,47)),((20,23),(31,(39,(27,(34,(18,(13,40)))))))),(19,36)),(28,(45,(5,24)))),((6,((33,(21,(38,26))),(22,(32,(17,44))))),(37,12)))))))))),(7,1))));
	TREE * UNTITLED = [&R] (4,((3,((8,9),(14,(11,10)))),((25,(2,((16,15),(30,((42,29),(41,(35,((((19,36),(((20,23),(31,(39,(27,(34,(18,(13,40))))))),(43,(47,46)))),(28,(45,(5,24)))),((6,((33,(21,(38,26))),((22,32),(17,44)))),(37,12)))))))))),(7,1))));
END;
