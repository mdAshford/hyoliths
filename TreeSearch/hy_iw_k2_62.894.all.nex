#NEXUS
[R-package APE, Tue May 29 22:03:04 2018]

BEGIN TAXA;
	DIMENSIONS NTAX = 46;
	TAXLABELS
		Cotyledion_tylodes
		Loxosomella
		Flustra
		Novocrania
		Lingula
		Phoronis
		Sipunculus
		Serpula
		Chiton
		Dentalium
		Pelagodiscus_atlanticus
		Terebratulina
		Wiwaxia_corrugata
		Halkieria_evangelista
		Dailyatia
		Acanthotretella_spinosa
		Alisina
		Askepasma_toddense
		Antigonambonites_planus
		Botsfordia
		Clupeafumosus_socialis
		Coolinia_pecten
		Craniops
		Eccentrotheca
		Eoobolus
		Glyptoria
		Gasconsia
		Haplophrentis_carinatus
		Heliomedusa_orienta
		Kutorgina_chengjiangensis
		Lingulosacculus
		Lingulellotreta_malongensis
		Longtancunella_chengjiangensis
		Micrina
		Micromitra
		Mickwitzia_muralensis
		Mummpikia_nuda
		Nisusia_sulcata
		Orthis
		Paterimitra
		Pedunculotheca_diania
		Salanygolina
		Siphonobolus_priscus
		Ussunia
		Tomteluva_perturbata
		Yuganotheca_elegans
	;
END;
BEGIN TREES;
	TRANSLATE
		1	Cotyledion_tylodes,
		2	Loxosomella,
		3	Flustra,
		4	Novocrania,
		5	Lingula,
		6	Phoronis,
		7	Sipunculus,
		8	Serpula,
		9	Chiton,
		10	Dentalium,
		11	Pelagodiscus_atlanticus,
		12	Terebratulina,
		13	Wiwaxia_corrugata,
		14	Halkieria_evangelista,
		15	Dailyatia,
		16	Acanthotretella_spinosa,
		17	Alisina,
		18	Askepasma_toddense,
		19	Antigonambonites_planus,
		20	Botsfordia,
		21	Clupeafumosus_socialis,
		22	Coolinia_pecten,
		23	Craniops,
		24	Eccentrotheca,
		25	Eoobolus,
		26	Glyptoria,
		27	Gasconsia,
		28	Haplophrentis_carinatus,
		29	Heliomedusa_orienta,
		30	Kutorgina_chengjiangensis,
		31	Lingulosacculus,
		32	Lingulellotreta_malongensis,
		33	Longtancunella_chengjiangensis,
		34	Micrina,
		35	Micromitra,
		36	Mickwitzia_muralensis,
		37	Mummpikia_nuda,
		38	Nisusia_sulcata,
		39	Orthis,
		40	Paterimitra,
		41	Pedunculotheca_diania,
		42	Salanygolina,
		43	Siphonobolus_priscus,
		44	Ussunia,
		45	Tomteluva_perturbata,
		46	Yuganotheca_elegans
	;
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,((36,29),((41,28),((21,(31,(((5,11),(32,(20,(37,25)))),(16,43)))),((42,(45,46)),(((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))))))))),(((13,10),(9,(15,14))),(7,8))),(24,1)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,(((28,41),((21,((31,(43,16)),((11,5),(32,(20,(37,25)))))),((((27,(44,(23,4))),(35,18)),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(42,(46,45))))),(36,29)))),(((10,13),(9,(14,15))),(8,7))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,((29,36),(((21,(31,((16,43),((32,(20,(37,25))),(5,11))))),((((35,18),(27,(44,(23,4)))),((19,22),(30,(38,(26,(33,(17,(12,39)))))))),(42,(46,45)))),(28,41))))),(((10,13),(9,(14,15))),(8,7))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,((36,29),((28,41),((21,((31,(43,16)),((11,5),(32,(20,(37,25)))))),((((18,35),(27,(44,(23,4)))),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(42,(46,45)))))))),(((10,13),(9,(14,15))),(8,7))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,(((28,41),((21,(31,((43,16),((32,(20,(25,37))),(11,5))))),((((18,35),(27,(44,(23,4)))),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(42,(46,45))))),(36,29)))),(((9,(14,15)),(10,13)),(8,7))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,(((28,41),((21,(31,((43,16),((11,5),(32,(20,(37,25))))))),((((18,35),(27,(44,(23,4)))),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(42,(46,45))))),(36,29)))),(((10,13),(9,(14,15))),(8,7))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,((29,36),((28,41),((21,(31,((43,16),((11,5),(32,(20,(37,25))))))),((((27,(44,(23,4))),(35,18)),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(42,(46,45)))))))),(((10,13),(9,(14,15))),(8,7))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,24),((40,(34,(((28,41),((21,((31,((11,5),(32,(20,(37,25))))),(43,16))),((((30,(38,(26,(33,(17,(12,39)))))),(19,22)),((27,(44,(23,4))),(35,18))),(42,(46,45))))),(36,29)))),((8,7),((10,13),(9,(15,14)))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,((29,36),((28,41),((21,((31,(43,16)),((11,5),(32,(20,(37,25)))))),((((27,(44,(23,4))),(35,18)),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(42,(46,45)))))))),(((10,13),(9,(14,15))),(8,7))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((((9,(15,14)),(10,13)),(7,8)),(40,(34,(((41,28),((21,((31,((32,(20,(37,25))),(5,11))),(16,43))),((((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46))))),(29,36))))),(24,1)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,(((41,28),((21,(31,(((32,(20,(25,37))),(5,11)),(16,43)))),((((35,18),(27,(44,(4,23)))),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46))))),(29,36)))),(((13,10),(9,(15,14))),(7,8))),(24,1)))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,24),((((13,10),(9,(14,15))),(8,7)),(40,(34,((36,29),((28,41),((21,(31,(((32,(20,(37,25))),(11,5)),(43,16)))),((42,(45,46)),(((35,18),(27,(44,(23,4)))),((30,(38,(26,(33,(17,(12,39)))))),(19,22))))))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((((7,8),((13,10),(9,(15,14)))),(40,(34,(((41,28),((21,(31,(((11,5),(32,(20,(25,37)))),(16,43)))),((((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46))))),(29,36))))),(24,1)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,(((28,41),((21,(31,(((32,(20,(37,25))),(11,5)),(43,16)))),((42,(46,45)),(((30,(38,(26,(33,(17,(12,39)))))),(19,22)),((27,(44,(23,4))),(35,18)))))),(36,29)))),(((10,13),(9,(14,15))),(8,7))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,(((41,28),((21,((31,(16,43)),((5,11),(32,(20,(25,37)))))),((((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46))))),(29,36)))),(((13,10),(9,(15,14))),(7,8))),(24,1)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,(((41,28),((21,(31,(((5,11),(32,(20,(25,37)))),(16,43)))),((((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46))))),(29,36)))),(((13,10),(9,(15,14))),(7,8))),(24,1)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((((10,13),(9,(15,14))),(8,7)),(40,(34,((29,36),((28,41),((21,((31,(43,16)),((32,(20,(37,25))),(11,5)))),((((27,(44,(23,4))),(35,18)),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(42,(46,45))))))))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((((13,10),(9,(14,15))),(8,7)),(40,(34,((29,36),((28,41),((21,((31,((11,5),(32,(20,(37,25))))),(43,16))),((42,(46,45)),(((19,22),(30,(38,(26,(33,(17,(12,39))))))),((27,(44,(23,4))),(35,18)))))))))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,((24,1),((((13,10),(9,(15,14))),(7,8)),(40,(34,(((41,28),((21,((31,(16,43)),((5,11),(32,(20,(25,37)))))),((((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46))))),(29,36)))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((((7,8),((10,13),(9,(15,14)))),(40,(34,(((41,28),((21,((31,(16,43)),((32,(20,(37,25))),(5,11)))),((((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46))))),(29,36))))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,((((8,7),((10,13),(9,(14,15)))),(40,(34,((36,29),((28,41),((21,((31,(43,16)),((32,(20,(37,25))),(11,5)))),((((27,(44,(23,4))),(35,18)),((30,(38,(26,(33,(17,(39,12)))))),(19,22))),(42,(46,45))))))))),(24,1)))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,24),((((13,10),(9,(15,14))),(7,8)),(40,(34,(((41,28),((21,((31,(16,43)),((5,11),(32,(20,(25,37)))))),((((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46))))),(29,36)))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((24,1),((((13,10),(9,(15,14))),(7,8)),(40,(34,((29,36),((41,28),((21,((31,(16,43)),((5,11),(32,(20,(37,25)))))),((42,(45,46)),(((30,(38,(26,(33,(17,(39,12)))))),(22,19)),((27,(44,(4,23))),(18,35))))))))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,24),(((8,7),((13,10),(9,(14,15)))),(40,(34,((((21,((31,((11,5),(32,(20,(37,25))))),(43,16))),((((18,35),(27,(44,(23,4)))),((30,(38,(26,(33,(17,(12,39)))))),(19,22))),(42,(46,45)))),(28,41)),(36,29)))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,((1,24),((((10,13),(9,(15,14))),(8,7)),(40,(34,(((28,41),(((((30,(38,(26,(33,(17,(12,39)))))),(19,22)),((35,18),(27,(44,(23,4))))),(42,(46,45))),(21,((31,(43,16)),((11,5),(32,(20,(37,25)))))))),(36,29)))))))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((((10,13),(9,(14,15))),(8,7)),(40,(34,(((28,41),((21,(31,(((11,5),(32,(20,(37,25)))),(43,16)))),((42,(46,45)),(((30,(38,(26,(33,(17,(12,39)))))),(19,22)),((27,(44,(4,23))),(35,18)))))),(36,29))))),(1,24)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,(((41,28),((21,(31,((16,43),((5,11),(32,(20,(25,37))))))),((((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46))))),(29,36)))),(((13,10),(9,(15,14))),(7,8))),(24,1)))));
	TREE * UNTITLED = [&R] (3,(2,(6,(((40,(34,((29,36),((41,28),((21,(31,((16,43),((5,11),(32,(20,(25,37))))))),((((27,(44,(4,23))),(18,35)),((30,(38,(26,(33,(17,(39,12)))))),(22,19))),(42,(45,46)))))))),(((13,10),(9,(15,14))),(7,8))),(24,1)))));
END;
